#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass IEEEtran
\begin_preamble
% for subfigures/subtables
\ifCLASSOPTIONcompsoc
\usepackage[caption=false,font=normalsize,labelfont=sf,textfont=sf]{subfig}
\else
\usepackage[caption=false,font=footnotesize]{subfig}
\fi
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding default
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement tbh
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Shared LLC Pollution by Helper Threaded Data Prefetching on CMPs"
\pdf_author "Min Cai, Zhimin Gu"
\pdf_keywords "chip multiprocessors, helper threaded data prefetching, cache replacement, cache pollution"
\pdf_bookmarks false
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
You find the IEEEtran document class documentation here: http://mirror.ctan.org/ma
cros/latex/contrib/IEEEtran/IEEEtran_HOWTO.pdf
\end_layout

\end_inset


\end_layout

\begin_layout Title
A Quantitative Analysis of Shared LLC Pollution by Helper Threaded Data
 Prefetching on CMPs
\end_layout

\begin_layout Author
Min
\begin_inset space ~
\end_inset

Cai, Zhimin
\begin_inset space ~
\end_inset

Gu
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Min Cai is with the School of Computer Science and Technology, Beijing Institute
 of Technology, Beijing, China, e-mail: 
\begin_inset CommandInset href
LatexCommand href
target "min.cai.china@gmail.com"

\end_inset

.
\end_layout

\end_inset


\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Zhimin Gu is with the School of Computer Science and Technology, Beijing
 Institute of Technology, Beijing, China, e-mail: 
\begin_inset CommandInset href
LatexCommand href
target "zmgu@x263.net"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Page headings
Journal of XXX
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}{
\end_layout

\end_inset

Your Name 
\begin_inset Flex Lowercase
status open

\begin_layout Plain Layout

\emph on
et al.
\end_layout

\end_inset

: Your Title
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
left side
\series bold
}{
\series default
right side
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
Helper threaded data prefetching on chip multiprocessors (CMPs), in its
 most basic form, utilizes the processing power of underutilized neighboring
 cores that communicate via a shared last level cache (LLC) to improve the
 performance of a single-threaded program running in a CMP.
 However, the multiple memory reference/miss streams that come from the
 main thread (MT) and the helper thread (HT) can inevitably stress and pollute
 LLC if no effective LLC content management techniques are employed.
\end_layout

\begin_layout Abstract
In this paper, we present the methodology and mechanisms used in the quantitativ
e analysis of the shared LLC pollution caused by helper-threaded data prefetchin
g on CMPs, in the aim of providing insights on improving the effectiveness
 and timeliness of the scheme.
 Firstly, the simulation environment for simulating helper-threaded data
 prefetching on CMPs is described.
 Secondly, the methodology to classify and quantify the contribution of
 HT requests to the MT performance is discussed.
 Results of memory-intensive benchmarks from Olden and CPU2006 show that:
 (1) there is notable cache pollution caused by helper-threaded data prefetching
 on CMPs; (2) there is room for improving the effectiveness and timeliness
 of helper-threaded data prefetching on CMPs.
\end_layout

\begin_layout Keywords
chip multiprocessors, helper threaded data prefetching, cache replacement,
 cache pollution
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
The 
\series bold

\backslash
IEEEPARstart
\series default
 command is needed in the first paragraph fo the document.
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IEEEPARstart{
\end_layout

\end_inset

 H
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}{
\end_layout

\end_inset

elper
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 threaded data prefetching on chip multiprocessors (CMPs), in its most basic
 form, utilizes the processing power of underutilized neighboring cores
 that communicate via a shared last level cache (LLC) to improve the performance
 of a single-threaded program running in a CMP.
 However, the multiple memory reference/miss streams that come from the
 main thread (MT) and the helper thread (HT) can inevitably stress and pollute
 LLC if no effective LLC content management techniques are employed.
\end_layout

\begin_layout Standard
In this paper, we present the methodology and mechanisms used in the quantitativ
e analysis of the shared LLC pollution caused by helper-threaded data prefetchin
g on CMPs, in the aim of providing insights on improving the effectiveness
 and timeliness of the scheme.
 Firstly, the experimental framework for simulating helper-threaded data
 prefetching on CMPs is described.
 Secondly, the methodology to classify and quantify the contribution of
 HT requests to the MT performance is discussed.
 Results of memory-intensive benchmarks from Olden and CPU2006 show that:
 (1) there is notable cache pollution caused by helper-threaded data prefetching
 on CMPs; (2) there is room for improving the effectiveness and timeliness
 of helper-threaded data prefetching on CMPs.
\end_layout

\begin_layout Standard
The remaining of the paper is organized as follows.
 Section 2 introduces the simulation environment for simulating helper-threaded
 data prefetching on CMPs.
 Section 3 discusses the methodology used to classify and quantify the contribut
ion of HT requests to the MT performance.
 Section 4 presents the results.
 Section 5 shows the previous work.
 Section 6 concludes the paper.
\end_layout

\begin_layout Section
Simulation Environment
\end_layout

\begin_layout Standard
We use an in-house multicore architectural simulator named Archimulator
 in our experiments mentioned in this work.
 Archimulator is an execution-driven architectural simulator implemented
 in Java and running on Linux that supports application-only cycle-accurate
 modeling of multicore multithreaded architectures.
 It has preliminary support of simulating Pthreads based parallel workloads.
\end_layout

\begin_layout Section
Methodology
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
First, we need to track which LLC requests come from the main thread, and
 which LLC requests come from the helper thread.
 For example, consider a simulated multicore machine which has two cores
 where each core has two hardware threads.
 In our system call emulation mode simulation in Archimulator, without the
 OS intervention, one hardware thread can only run at least one software
 context (or called thread).
 Therefore, the typical software context to hardware thread assignments
 can be: core 0 thread 0 run context 0 (which is the main thread), core
 0 thread 1 run context 1 (which is the pthread manager thread), core 1
 thread 0 run context 2 (which is the helper thread), and core 1 thread
 1 is idle.
 We use this configuration in the following discussions.
 
\end_layout

\begin_layout Standard
Second, to monitor the request and replacement activities in LLC, we need
 to consider the event when the LLC receives a request coming from the upper
 level cache (i.e., a hit or miss), which is named CoherentCacheServiceNonblocking
RequestEvent in Archimulator.
 The event has a few important properties, e.g., the address of the requested
 LLC line, the requester memory hierarchy access, line found in the LLC,
 a boolean value indicating whether the request hits in the LLC, and a boolean
 value indicating whether the request needs to evict some LLC line.
 This event is similar to the comination of two events mentioned in 
\begin_inset CommandInset citation
LatexCommand cite
key "Mehta2004"

\end_inset

.
\end_layout

\begin_layout Standard
Thirdly, in order to track the HT request state in the LLC and victims replaced
 by HT requests, we add two data structures to the LLC, namely htRequestStates
 and htRequestVictimCache.
 htRequestStates is a mirror cache of the LLC, which maintains an HT request
 state field for each LLC line, which can be in three values: INVALID, MT
 and HT.
 htRequestVictimCache is an LRU cache that has the same structure of the
 LLC, but there is no mapping between each LLC line and each htRequestVictimCach
e line.
 Each htRequestVictimCache line contains a field, the type of field can
 be in three values: INVALID, NULL and DATA.
\end_layout

\begin_layout Subsection
Algorithms
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},breaklines=true,frame=single,language=Java,numbers=left,numberstyle={\scriptsize}"
inline false
status open

\begin_layout Plain Layout

if(hitInLLC && requesterIsHT) {
\end_layout

\begin_layout Plain Layout

  totalHtRequests++;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if(requesterIsHT && hitInLLC && hasEviction) {
\end_layout

\begin_layout Plain Layout

  llc.setHT(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  victimCache.insertNullEntry(set);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

else if(requesterIsHT && !hitInLLC && hasEviction && !lineFoundIsHT) {
\end_layout

\begin_layout Plain Layout

  llc.setHT(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  victimCache.insertDataEntry(set, llcLine.tag);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

else if(requesterIsHT && !hitInCache && hasEviction && lineFoundIsHT) {
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

else if(!requesterIsHT && !hitInCache && hasEviction && lineFoundIsHT) {
\end_layout

\begin_layout Plain Layout

  llc.setMT(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  victimCache.removeLRU(set);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

else if(!requesterIsHT && !lineFoundIsHT) {
\end_layout

\begin_layout Plain Layout

  if(htRequestFound()) {
\end_layout

\begin_layout Plain Layout

    victimCache.removeLRU(set);
\end_layout

\begin_layout Plain Layout

    victimCache.insertDataEntry(set, llcLine.tag);
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
LLC Line Brought In
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},breaklines=true,frame=single,language=Java,numbers=left,numberstyle={\scriptsize}"
inline false
status open

\begin_layout Plain Layout

if(!mtHit && !htHit && vtHit) {
\end_layout

\begin_layout Plain Layout

  badHtRequests++;
\end_layout

\begin_layout Plain Layout

  victimCache.setLRU(set, vtLine.way);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

else if(!mtHit && htHit && !vtHit) {
\end_layout

\begin_layout Plain Layout

  llc.setMT(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  goodHtRequests++;
\end_layout

\begin_layout Plain Layout

  removeLRU(set);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

else if(!mtHit && htHit && vtHit) {
\end_layout

\begin_layout Plain Layout

  llc.setMT(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  victimCache.setLRU(set, vtLine.way);
\end_layout

\begin_layout Plain Layout

  victimCache.removeLRU(set);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

else if(mtHit && !htHit && vtHit) {
\end_layout

\begin_layout Plain Layout

  victimCache.setLRU(set, vtLine.way);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Servicing MT and HT Requests
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Itemize
mst 1000, HT version, HT params: ?, ?, ? , detailed simulation vs checkpointed
 simulation
\end_layout

\begin_layout Itemize
mst 10000, HT version, HT params: ?, ?, ? , checkpointed simulation
\end_layout

\begin_layout Section
Previous Work
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
TODO: our work: what? how? result? Further work?
\end_layout

\begin_layout Section*
Acknowlegments
\end_layout

\begin_layout Standard
This work was supported by the National Natural Science Foundation of China
 under the contract No.
 61070029.
 
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "ref"
options "IEEEtran"

\end_inset


\end_layout

\end_body
\end_document
