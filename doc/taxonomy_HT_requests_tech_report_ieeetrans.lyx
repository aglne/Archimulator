#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass IEEEtran
\begin_preamble
% for subfigures/subtables
\ifCLASSOPTIONcompsoc
\usepackage[caption=false,font=normalsize,labelfont=sf,textfont=sf]{subfig}
\else
\usepackage[caption=false,font=footnotesize]{subfig}
\fi
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding default
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement tph
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Shared LLC Pollution by Helper Threaded Data Prefetching on CMPs"
\pdf_author "Min Cai, Zhimin Gu"
\pdf_keywords "chip multiprocessors, helper threaded data prefetching, cache replacement, cache pollution"
\pdf_bookmarks false
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
You find the IEEEtran document class documentation here: http://mirror.ctan.org/ma
cros/latex/contrib/IEEEtran/IEEEtran_HOWTO.pdf
\end_layout

\end_inset


\end_layout

\begin_layout Title
A Quantitative Analysis of Shared LLC Pollution by Helper Threaded Data
 Prefetching on CMPs
\end_layout

\begin_layout Author
Min
\begin_inset space ~
\end_inset

Cai, Zhimin
\begin_inset space ~
\end_inset

Gu
\begin_inset Foot
status open

\begin_layout Plain Layout
Min Cai, School of Computer Science and Technology, Beijing Institute of
 Technology, Beijing, China, e-mail: 
\begin_inset CommandInset href
LatexCommand href
target "min.cai.china@gmail.com"

\end_inset

.
\end_layout

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
Zhimin Gu, School of Computer Science and Technology, Beijing Institute
 of Technology, Beijing, China, e-mail: 
\begin_inset CommandInset href
LatexCommand href
target "zmgu@x263.net"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Page headings
Journal of XXX
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}{
\end_layout

\end_inset

Your Name 
\begin_inset Flex Lowercase
status open

\begin_layout Plain Layout

\emph on
et al.
\end_layout

\end_inset

: Your Title
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
left side
\series bold
}{
\series default
right side
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
Helper threaded data prefetching on chip multiprocessors (CMPs), in its
 most basic form, utilizes the processing power of underutilized neighboring
 cores that communicate via a shared last level cache (LLC) to improve the
 performance of a single-threaded program running in a CMP.
 However, the multiple memory reference/miss streams that come from the
 main thread (MT) and the helper thread (HT) can inevitably stress and pollute
 LLC if no effective LLC content management techniques are employed.
\end_layout

\begin_layout Abstract
In this paper, we present the methodology and mechanisms used in the quantitativ
e analysis of the shared LLC pollution caused by helper-threaded data prefetchin
g on CMPs, in the aim of providing insights on improving the effectiveness
 and timeliness of the scheme.
 Firstly, the simulation environment for simulating helper-threaded data
 prefetching on CMPs is described.
 Secondly, the methodology to classify and quantify the contribution of
 HT requests to the MT performance is discussed.
 Results of memory-intensive benchmarks from Olden and CPU2006 show that:
 (1) there is notable cache pollution caused by helper-threaded data prefetching
 on CMPs; (2) there is room for improving the effectiveness and timeliness
 of helper-threaded data prefetching on CMPs.
\end_layout

\begin_layout Keywords
chip multiprocessors, helper threaded data prefetching, cache replacement,
 cache pollution
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
The 
\series bold

\backslash
IEEEPARstart
\series default
 command is needed in the first paragraph fo the document.
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IEEEPARstart{
\end_layout

\end_inset

 H
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}{
\end_layout

\end_inset

elper
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 threaded data prefetching on chip multiprocessors (CMPs), in its most basic
 form, utilizes the processing power of underutilized neighboring cores
 that communicate via a shared last level cache (LLC) to improve the performance
 of a single-threaded program running in a CMP.
 However, the multiple memory reference/miss streams that come from the
 main thread (MT) and the helper thread (HT) can inevitably stress and pollute
 LLC if no effective LLC content management techniques are employed.
\end_layout

\begin_layout Standard
In this paper, we present the methodology and mechanisms used in the quantitativ
e analysis of the shared LLC pollution caused by helper-threaded data prefetchin
g on CMPs, in the aim of providing insights on improving the effectiveness
 and timeliness of the scheme.
 
\end_layout

\begin_layout Standard
We assume here a two level cache hierarchy where L1 caches are private and
 the L2 cache is shared among all processor cores on a single chip.
 
\end_layout

\begin_layout Standard
Firstly, the experimental framework for simulating helper-threaded data
 prefetching on CMPs is described.
 Secondly, the methodology to classify and quantify the contribution of
 HT requests to the MT performance is discussed.
 Results of memory-intensive benchmarks from Olden and CPU2006 show that:
 (1) there is notable cache pollution caused by helper-threaded data prefetching
 on CMPs; (2) there is room for improving the effectiveness and timeliness
 of helper-threaded data prefetching on CMPs.
\end_layout

\begin_layout Standard
The remaining of the paper is organized as follows.
 Section 2 introduces the simulation environment for simulating helper-threaded
 data prefetching on CMPs.
 Section 3 discusses the methodology used to classify and quantify the contribut
ion of HT requests to the MT performance.
 Section 4 presents the results.
 Section 5 shows the previous work.
 Section 6 concludes the paper.
\end_layout

\begin_layout Section
Simulation Environment
\end_layout

\begin_layout Standard
Simulator: we use an in-house multicore architectural simulator named Archimulat
or in our experiments mentioned in this work.
 Archimulator is an execution-driven architectural simulator written in
 Java and running on Linux that supports application-only cycle-accurate
 modeling of multicore multithreaded architectures.
 It has preliminary support of simulating Pthreads based parallel workloads.
\end_layout

\begin_layout Standard
Target machine: 4(8)-wide OoO 2 x 2 CMP, shared 4MB 8-way set-associative
 L2, private 32KB 8-way set-associative L1 data caches and 32KB 4-way set-associ
ative L1 instruction caches, MESI coherence between L1s, switch based point-to-p
oint on-chip interconnect.
\end_layout

\begin_layout Standard
...
\end_layout

\begin_layout Section
Methodology
\end_layout

\begin_layout Subsection
Definitions 
\end_layout

\begin_layout Standard
Based on their contribution to the MT performance, on the LLC which is shared
 by MT, HT and some other threads, the following taxonomy of HT requests
 can be obtained:
\end_layout

\begin_layout Itemize
# Good HT requests = # HT requests that hit by MT before evicted;
\end_layout

\begin_layout Itemize
# Bad HT requests = # HT requests whose requested data are used later (or
 not used at all) by MT than the evicted data;
\end_layout

\begin_layout Itemize
# Ugly HT requests = # HT requests - # good HT requests - # bad HT requests.
\end_layout

\begin_layout Subsection
Hardware Changes
\end_layout

\begin_layout Standard
First, we need to track which LLC requests come from the main thread, and
 which LLC requests come from the helper thread.
 For example, consider a simulated multicore machine which has two cores
 where each core has two hardware threads.
 In our application-only simulation using Archimulator, without the OS intervent
ion, one hardware thread can only run at least one software context (or
 called thread).
 Therefore, the typical software context to hardware thread assignments
 can be: 
\bar under
core 0 thread 0 run context 0 (which is the main thread), core 0 thread
 1 run context 1 (which is the pthread manager thread), core 1 thread 0
 run context 2 (which is the helper thread), and core 1 thread 1 is idle
\bar default
.
 We use this configuration in the following discussions.
\end_layout

\begin_layout Standard
Second, to monitor the request and replacement activities in LLC, we need
 to consider 
\bar under
the event indicating the LLC receives a request coming from the upper level
 cache
\bar default
, whether it is a hit or a miss.
 The event has a few important properties, e.g., the address of the requested
 LLC line, the requester memory hierarchy access, line found in the LLC,
 a boolean value indicating whether the request hits in the LLC, and a boolean
 value indicating whether the request needs to evict some LLC line.
 This event is similar to the discussion in 
\begin_inset CommandInset citation
LatexCommand cite
key "Mehta2004"

\end_inset

.
\end_layout

\begin_layout Standard
Thirdly, in order to track the HT request states in the LLC, we need to
 
\bar under
add one field to each LLC line to indicate whether the line is brought by
 the main thread (MT) or the helper thread (HT) or otherwise invalid (INVALID)
\bar default
.
 
\end_layout

\begin_layout Standard
Fourthly, in order to track victims replaced by HT requests, 
\bar under
we need to add an LRU cache named HT Request Victim Cache (HTRVC) to maintain
 the LLC lines that are evicted by HT requests
\bar default
.
 Similar to the evict table used in 
\begin_inset CommandInset citation
LatexCommand cite
key "Mehta2004"

\end_inset

, the HTRVC has the same structure of the LLC, but there is no direct mapping
 between LLC lines and HTRVC lines.
 HTRVC has only the purpose of profiling, so it has no impact on performance.
\end_layout

\begin_layout Subsection
Invariants 
\end_layout

\begin_layout Standard
Similar to the two invariants proposed in 
\begin_inset CommandInset citation
LatexCommand cite
key "Mehta2004"

\end_inset

, there are two invariants that should be maintained:
\end_layout

\begin_layout Enumerate
# of HT Lines in the LLC Set = # of Victim Entries in the HTRVC Set;
\end_layout

\begin_layout Enumerate
# of Victim Entries in HTRVC Set + # of Valid MT LLC Lines in Set ≤ LLC
 Set Associativity.
\end_layout

\begin_layout Standard
From the above two invariants, we can conclude that: # of HT Lines in the
 LLC Set+ # of Valid MT LLC Lines in Set ≤ LLC Set Associativity.
\end_layout

\begin_layout Subsection
Actions taken on LLC and HT Request Victim Cache
\end_layout

\begin_layout Standard
Similar to the approach proposed in 
\begin_inset CommandInset citation
LatexCommand cite
key "Mehta2004"

\end_inset

, corresponding actions should be taken in LLC and HTRVC when filling an
 LLC line (Fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:LLC-Line-Brought-In"

\end_inset

) or servicing an incoming LLC request (Fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Servicing-MT-and-HT-requests"

\end_inset

).
\end_layout

\begin_layout Standard

\color red
TODOs: dispatching and handling of CoherentCacheServiceNonblockingRequestEvent:
 dispatching in CoherentCache.AbstractFindAndLockProcess.doLockingProcess(..)
 handling in LastLevelCacheHtRequestCachePollutionProfilingCapability.serviceRequ
est(..)
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,frame=single,language=Java"
inline false
status open

\begin_layout Plain Layout

//Inputs:
\end_layout

\begin_layout Plain Layout

//  hitInLLC: whether the request hits in LLC or not
\end_layout

\begin_layout Plain Layout

//  requesterIsHT: whether the request comes from HT or not
\end_layout

\begin_layout Plain Layout

//  hasEviction: whether the request needs to evict some data
\end_layout

\begin_layout Plain Layout

//  lineFoundIsHT: whether the LLC line found is brought by HT or not
\end_layout

\begin_layout Plain Layout

//  htRequestFound(): whether there is at least one line in the LLC set
 that is brought by HT
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//HT miss
\end_layout

\begin_layout Plain Layout

if(!hitInLLC && requesterIsHT) {
\end_layout

\begin_layout Plain Layout

  totalHtRequests++;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Case 1: HT evicts INVALID
\end_layout

\begin_layout Plain Layout

if(requesterIsHT && !hitInLLC && !hasEviction) {
\end_layout

\begin_layout Plain Layout

  llc.setHT(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  htrvc.insertNullEntry(set);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 2: HT evicts MT
\end_layout

\begin_layout Plain Layout

else if(requesterIsHT && !hitInLLC && hasEviction && !lineFoundIsHT) {
\end_layout

\begin_layout Plain Layout

  llc.setHT(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  htrvc.insertDataEntry(set, llcLine.tag);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 3: HT evicts HT
\end_layout

\begin_layout Plain Layout

else if(requesterIsHT && !hitInLLC && hasEviction && lineFoundIsHT) {
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 4: MT evicts HT
\end_layout

\begin_layout Plain Layout

else if(!requesterIsHT && !hitInLLC && hasEviction && lineFoundIsHT) {
\end_layout

\begin_layout Plain Layout

  llc.setMT(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  htrvc.removeLRU(set);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 5: MT evicts MT, and there exists one HT line
\end_layout

\begin_layout Plain Layout

else if(!requesterIsHT && !lineFoundIsHT) {
\end_layout

\begin_layout Plain Layout

  if(htRequestFound()) {
\end_layout

\begin_layout Plain Layout

    htrvc.removeLRU(set);
\end_layout

\begin_layout Plain Layout

    htrvc.insertDataEntry(set, llcLine.tag);
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Actions Taken When Fillling an LLC Line
\begin_inset CommandInset label
LatexCommand label
name "fig:LLC-Line-Brought-In"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,frame=single,language=Java"
inline false
status open

\begin_layout Plain Layout

//Inputs:
\end_layout

\begin_layout Plain Layout

//  mtHit: whether the request comes from MT and hits in the LLC
\end_layout

\begin_layout Plain Layout

//  htHit: whether the request comes from HT and hits in the LLC
\end_layout

\begin_layout Plain Layout

//  vtHit: whether the request comes from MT and hits in the HTRVC
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Case 1: VT hit => Good HT request (HT request evicted useful data)
\end_layout

\begin_layout Plain Layout

if(!mtHit && !htHit && vtHit) {
\end_layout

\begin_layout Plain Layout

  badHtRequests++;
\end_layout

\begin_layout Plain Layout

  htrvc.setLRU(set, vtLine.way);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 2: HT hit => Bad HT request (HT requested data hit before evicted
 data)
\end_layout

\begin_layout Plain Layout

else if(!mtHit && htHit && !vtHit) {
\end_layout

\begin_layout Plain Layout

  llc.setMT(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  goodHtRequests++;
\end_layout

\begin_layout Plain Layout

  htrvc.removeLRU(set);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 3: HT and VT hit (Useful data evicted and requested back in by HT)
\end_layout

\begin_layout Plain Layout

else if(!mtHit && htHit && vtHit) {
\end_layout

\begin_layout Plain Layout

  llc.setMT(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  htrvc.setLRU(set, vtLine.way);
\end_layout

\begin_layout Plain Layout

  htrvc.removeLRU(set);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 4: MT and VT hit(Useful data evicted and requested back in by HT
 and hit to by MT)
\end_layout

\begin_layout Plain Layout

else if(mtHit && !htHit && vtHit) {
\end_layout

\begin_layout Plain Layout

  htrvc.setLRU(set, vtLine.way);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Actions Taken When Servicing an LLC Request
\begin_inset CommandInset label
LatexCommand label
name "fig:Servicing-MT-and-HT-requests"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Preliminary Results
\end_layout

\begin_layout Enumerate
mst 1000, HT version (params: LOOKAHEAD=20, STRIDE=10), detailed simulation
 vs checkpointed simulation
\end_layout

\begin_deeper
\begin_layout Itemize
detailed simulation
\end_layout

\begin_deeper
\begin_layout Itemize
llc.totalHtRequests=584655 
\end_layout

\begin_layout Itemize
llc.goodHtRequests=584579 
\end_layout

\begin_layout Itemize
llc.badHtRequests=0
\end_layout

\begin_layout Itemize
llc.uglyHtRequests=76
\end_layout

\end_deeper
\begin_layout Itemize
checkpointed simulation
\end_layout

\begin_deeper
\begin_layout Itemize
llc.totalHtRequests=585150
\end_layout

\begin_layout Itemize
llc.goodHtRequests=585079
\end_layout

\begin_layout Itemize
llc.badHtRequests=0
\end_layout

\begin_layout Itemize
llc.uglyHtRequests=71
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
mst 10000, HT version, checkpointed simulation
\end_layout

\begin_deeper
\begin_layout Itemize
pending...
\end_layout

\end_deeper
\begin_layout Section
Previous Work
\end_layout

\begin_layout Standard
TODO: previous work on prefetch taxonomies.
 Traditional coverage and accuracy metrics for h/w prefetches.
 -> good, bad and ugly breakdown of h/w prefetches.
 -> more fine-grained breakdowns of h/w prefetches.
 any previous work on cache request breakdowns for helper threaded data
 prefetching? 
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
TODOs: our work: what? how? result? Further work?
\end_layout

\begin_layout Section*
Acknowlegments
\end_layout

\begin_layout Standard
This work was supported by the National Natural Science Foundation of China
 under the contract No.
 61070029.
 
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "ref"
options "IEEEtran"

\end_inset


\end_layout

\end_body
\end_document
