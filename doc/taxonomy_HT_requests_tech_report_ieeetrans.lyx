#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass IEEEtran
\begin_preamble
% for subfigures/subtables
\ifCLASSOPTIONcompsoc
\usepackage[caption=false,font=normalsize,labelfont=sf,textfont=sf]{subfig}
\else
\usepackage[caption=false,font=footnotesize]{subfig}
\fi
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding default
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Dynamic LLC Replacement for Helper Threaded Data Prefetching on CMPs"
\pdf_author "Min Cai, Zhimin Gu"
\pdf_keywords "chip multiprocessors, helper threaded data prefetching, cache replacement, cache pollution"
\pdf_bookmarks false
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
You find the IEEEtran document class documentation here: http://mirror.ctan.org/ma
cros/latex/contrib/IEEEtran/IEEEtran_HOWTO.pdf
\end_layout

\end_inset


\end_layout

\begin_layout Title
Dynamic LLC Replacement for Helper Threaded Data Prefetching on CMPs
\end_layout

\begin_layout Author
Min
\begin_inset space ~
\end_inset

Cai, Zhimin
\begin_inset space ~
\end_inset

Gu
\begin_inset Foot
status open

\begin_layout Plain Layout
Min Cai, School of Computer Science and Technology, Beijing Institute of
 Technology, Beijing, China, e-mail: 
\begin_inset CommandInset href
LatexCommand href
target "min.cai.china@gmail.com"

\end_inset

.
\end_layout

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
Zhimin Gu, School of Computer Science and Technology, Beijing Institute
 of Technology, Beijing, China, e-mail: 
\begin_inset CommandInset href
LatexCommand href
target "zmgu@x263.net"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Page headings
Journal of XXX
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}{
\end_layout

\end_inset

Your Name 
\begin_inset Flex Lowercase
status open

\begin_layout Plain Layout
et al.
\end_layout

\end_inset

: Your Title
\begin_inset Note Note
status open

\begin_layout Plain Layout
left side
\series bold
}{
\series default
right side
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
Helper threaded data prefetching on chip multiprocessors (CMPs), in its
 most basic form, utilizes the processing power of underutilized neighboring
 cores that communicate via a shared last level cache (LLC) to improve the
 performance of a single-threaded program running on a CMP.
 The multiple memory reference/miss streams that come from the main thread
 (MT) and the helper thread (HT) can inevitably stress and pollute LLC if
 no effective LLC content management techniques are employed.
 As a first step, appropriate metrics should be used to measure the effectivenes
s and cache pollution of the HT scheme.
 However, due to the shared LLC structure, the traditional metrics of accuracy
 and coverage and good/bad classification for hardware prefetching cannnot
 be applied to describe the inter-thread interference and cache pollution
 in the helper threaded data prefetching.
 
\end_layout

\begin_layout Abstract
In this paper, based on the idea of cache pollution and HT request lateness,
 we present a taxonomy of HT requests to evaluate the effectiveness of the
 helper-threaded data prefetching on CMPs, in the aim of providing insights
 on designing and implementing effective LLC content management mechanisms
 for the HT scheme.
 Firstly, the taxonomy is proposed.
 Secondly, the hardware changes to support the taxonomy and algorithms for
 tracking HT requests and victims.
 Lastly, results of memory-intensive benchmarks from Olden and CPU2006 show
 that: (1) there is notable cache pollution caused by helper-threaded data
 prefetching on CMPs; (2) there is room for improving the effectiveness
 and timeliness of helper-threaded data prefetching on CMPs.
\end_layout

\begin_layout Keywords
chip multiprocessors, helper threaded data prefetching, cache replacement,
 cache pollution
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
The 
\series bold

\backslash
IEEEPARstart
\series default
 command is needed in the first paragraph fo the document.
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IEEEPARstart{
\end_layout

\end_inset

 H
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}{
\end_layout

\end_inset

elper
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 threaded data prefetching on chip multiprocessors (CMPs)
\begin_inset CommandInset citation
LatexCommand cite
key "VanLil2000"

\end_inset

, in its most basic form, utilizes the processing power of underutilized
 neighboring cores that communicate via a shared last level cache (LLC)
 to improve the performance of a single-threaded program running in a CMP.
 However, the multiple memory reference/miss streams that come from the
 main thread (MT) and the helper thread (HT) can inevitably stress and pollute
 LLC if no effective LLC content management techniques are employed.
\end_layout

\begin_layout Standard
Several metrics have been proposed in the past for evaluating the effectiveness
 of hardware prefetching, among which prefetch accuracy and coverage are
 the most intuitive ones 
\begin_inset CommandInset citation
LatexCommand cite
key "Srinivasan2004"

\end_inset

.
 We can adapt the definitions of accuracy and coverage for hardware prefetching
 to the HT scheme.
 HT request accuracy is defined as the ratio of the number of useful HT
 requests to the number of total HT requests.
 And HT request coverage is defined as the ratio of the number of useful
 HT requests to the number of MT misses plus MT hits to HT requested data.
 Here, an HT request is called useful when its requested data is referenced
 by MT before evicted.
 Furthermore, similar to the approach to hardware prefetching, to measure
 coverage and accuracy, all HT requests can be categorized into 
\begin_inset Quotes eld
\end_inset

Useful
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Useless
\begin_inset Quotes erd
\end_inset

 HT requests 
\begin_inset CommandInset citation
LatexCommand cite
key "Srinivasan2004"

\end_inset

.
 a 
\begin_inset Quotes eld
\end_inset

Useful
\begin_inset Quotes erd
\end_inset

 HT request is one whose brought data is hit by a MT request before it is
 replaced, while a 
\begin_inset Quotes eld
\end_inset

Useless
\begin_inset Quotes erd
\end_inset

 Ht request is one whose brought data is replaced before it is hit by a
 MT request.
\end_layout

\begin_layout Standard
However the above accuracy and coverage metrics for HT requests and the
 classification of 
\begin_inset Quotes eld
\end_inset

Useful
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Useless
\begin_inset Quotes erd
\end_inset

 HT requests don't care about cache pollution and HT request lateness, which
 are two kinds of deficiencies in the HT scheme.
 
\end_layout

\begin_layout Standard
In this paper, based on the idea of cache pollution and HT request lateness,
 we present a taxonomy of HT requests to evaluate the effectiveness of the
 helper-threaded data prefetching on CMPs, in the aim of providing insights
 on designing and implementing effective LLC content management mechanisms
 for the HT scheme.
 We assume here a two level cache hierarchy where L1 caches are private
 and the L2 cache is shared among all processor cores on a single chip.
 
\end_layout

\begin_layout Standard
The main contributions of this paper can be summarized as follows:
\color red
 
\end_layout

\begin_layout Enumerate
Proposes the cycle-accurate multicore simulation framework to evaluate the
 cache pollution effects and lateness for HT requests in the helper thread
 scheme for CMPs.
\end_layout

\begin_layout Enumerate
Presents the cache pollution aware classification of 
\begin_inset Quotes eld
\end_inset

good
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

bad
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

ugly
\begin_inset Quotes erd
\end_inset

 HT requests.
\end_layout

\begin_layout Enumerate
Presents the lateness measurement of HT requests which is a good indicator
 for potential improvement of the HT scheme.
\end_layout

\begin_layout Standard
Firstly, the taxonomy is proposed.
 Secondly, the hardware changes to support the taxonomy and algorithms for
 tracking HT requests and victims.
 Lastly, results of memory-intensive benchmarks from Olden and CPU2006 show
 that: (1) there is notable cache pollution caused by helper-threaded data
 prefetching on CMPs; (2) there is room for improving the effectiveness
 and timeliness of helper-threaded data prefetching on CMPs.
\end_layout

\begin_layout Standard
The remaining of the paper is organized as follows.
 Section 2 presents a taxonomy of HT requests to assist evaluating shared
 LLC pollution caused by helper-threaded data prefetching on CMPs, the hardware
 changes to support the taxonomy and algorithms for tracking HT requests
 and victims.
 Section 3 presents the results.
 Section 4 shows the previous work.
 Section 5 concludes the paper.
\end_layout

\begin_layout Section
Methodology
\end_layout

\begin_layout Subsection
A Taxonomy of HT requests 
\end_layout

\begin_layout Standard
As illustrated in Tab.
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:HT-Request-Taxonomy"

\end_inset

, We propose a taxonomy of HT requests based on the cache pollution and
 HT request lateness.
 Among these types of HT requests, good HT requests have positive impact
 on MT performance.
 Ugly HT requests have little performance impact on MT performance because
 the requested data are not referenced by MT before evicted and they do
 not evict any data that will be used by MT.
 Bad HT requests are harmful for MT performance which should be prevented
 as much as possible.
 Late HT requests are good indicators for potential performance improvement
 of the HT scheme because late HT requests may be converted to good HT requests
 by finetuning the parameters of the HT scheme.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
HT Request Taxonomy
\begin_inset CommandInset label
LatexCommand label
name "tab:HT-Request-Taxonomy"

\end_inset


\end_layout

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Good HT requests
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
HT requests that hit by MT before evicted
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Bad HT requests
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "68col%"
special "none"
height "1.1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
HT requests whose requested data are used later (or not used at all) by
 MT than the evicted data
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Ugly HT requests
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Requests that are not good or bad
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Late HT requests
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
In-flight HT requests that hit by MT requests
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Hardware Support
\end_layout

\begin_layout Subsubsection
Experimental Setup
\end_layout

\begin_layout Standard
We use an in-house multicore architectural simulator named Archimulator
 in our experiments mentioned in this work.
 Archimulator is an execution-driven architectural simulator written in
 Java and running on Linux.
 It provides cycle-accurate application-only simulation of MIPS II executables
 on multicore architectures consisting of OoO super-scalar cores and configurabl
e memory hierarchy of directory-based MESI coherence.
 It has support of simulating Pthreads based parallel workloads.
 
\end_layout

\begin_layout Subsubsection
Target CMP Architecture
\end_layout

\begin_layout Standard
As shown in Fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Simulated-CMP-Architecture"

\end_inset

, the simulated target CMP architecture has two cores where each core is
 a two-way SMT with its own private L1 caches (32KB 8-way data caches and
 32KB 4-way instruction caches).
 Both cores share a 4MB 8-way L2 cacche.
 MESI coherence is maintained between L1 caches.
 Detailed parameters are shown in Tab.
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Baseline-Hardware-Configurations"

\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/itecgo/Archimulator/doc/res/cacheconfig.pdf
	scale 68
	BoundingBox 30bp 475bp 330bp 760bp
	clip

\end_inset


\begin_inset VSpace defskip
\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Simulated CMP Architecture
\begin_inset CommandInset label
LatexCommand label
name "fig:Simulated-CMP-Architecture"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Pipeline
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "66col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
4-wide superscalar OoO 2 x 2 CMP; physical register file capacity: 128;
 decode buffer capacity: 96; reorder buffer capacity: 96; load store queue
 capacity: 48
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Branch Predictors
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "66col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Perfect branch predictor
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Execution Units
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Count
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Operation Lat.
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Issue Lat.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Int ALU
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
8
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Int Mult
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Int Div
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
20
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
19
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Fp Add
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
8
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Fp Compare
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Fp Convert
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Fp Mult
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
8
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Fp Div
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
40
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Fp Sqrt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
80
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
40
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Read Port
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Write Port
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cache Geometries
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="5">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Size
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Assoc.
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Line Size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Hit Lat.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
l1i
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
32KB
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
64B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
l1d
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
32KB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
64B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
l2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
4096KB
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
8
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
64B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
10
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Interconnect
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "66col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Switch based P2P topology, 32B link width
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Main Memory
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "66col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
4GB, 200-cycle fixed latency
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\size default

\begin_inset VSpace defskip
\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Baseline Hardware Configurations
\begin_inset CommandInset label
LatexCommand label
name "tab:Baseline-Hardware-Configurations"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Software Context to Hardware Thread Mapping
\end_layout

\begin_layout Standard
For a typical Pthreads based HT program, there are three threads when running:
 MT, HT and the Pthreads manager thread.
 The Pthreads manager thread takes the role of spawning, pausing and resuming
 HT by passing signals to HT.
 Consider a simulated target multicore machine which has two cores where
 each core supports two hardware threads.
 In our application-only simulation using Archimulator, without the OS intervent
ion, one hardware thread can only run at least one software context (or
 simply called thread).
 Therefore, the typical software context to hardware thread mappings can
 be: C0T0 -> MT, C0T1 -> Pthreads manager thread, C1T0 -> HT (C = core,
 T = thread), as shown in Fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Simulated-CMP-Architecture"

\end_inset

.
 We use this context mapping in the following discussions.
 
\end_layout

\begin_layout Subsubsection
Hardware Changes
\end_layout

\begin_layout Paragraph
LLC request and replacement event tracking
\end_layout

\begin_layout Standard
To monitor the request and replacement activities in LLC, we need to consider
 the event when the LLC receives a request coming from the upper level cache,
 whether it is a hit or a miss.
 The event has a few important properties to be used in the experiment,
 e.g., the address of the requested LLC line, the requester memory hierarchy
 access, line found in the LLC, a boolean value indicating whether the request
 hits in the LLC, and a boolean value indicating whether the request needs
 to evict some LLC line.
 This event is similar to one used in 
\begin_inset CommandInset citation
LatexCommand cite
key "Mehta2004"

\end_inset

.
\end_layout

\begin_layout Paragraph
LLC HT request state tracking
\end_layout

\begin_layout Standard
In order to track the HT request states in the LLC, we need to add one field
 to each LLC line to indicate whether the line is brought by the main thread
 (MT) or the helper thread (HT) or otherwise invalid (INVALID).
 
\end_layout

\begin_layout Paragraph
LLC HT request victim state tracking
\end_layout

\begin_layout Standard
In order to track victims replaced by HT requests, we need to add an LRU
 cache named HT Request Victim Cache (HTRVC) to maintain the LLC lines that
 are evicted by HT requests.
 Similar to the evict table used in 
\begin_inset CommandInset citation
LatexCommand cite
key "Mehta2004"

\end_inset

, the HTRVC has the same structure of the LLC, but there is no direct mapping
 between LLC lines and HTRVC lines.
 HTRVC has only the purpose of profiling, so it has no impact on performance.
\end_layout

\begin_layout Paragraph
Detecting Late HT Requests
\end_layout

\begin_layout Standard
Lastly, in order to measure late HT requests, we only need to identify the
 event when an MT request hits to an LLC line which is being brought by
 an inflight HT request coming from the upper level cache.
 This can be accomplished by monitoring the LLC MSHRs or similar hardware
 components.
\end_layout

\begin_layout Subsection
Algorithms for Tracking HT Requests and Victims
\end_layout

\begin_layout Standard
There are two invariants that should be maintained:
\end_layout

\begin_layout Enumerate
# of HT Lines in the LLC Set = # of Victim Entries in the HTRVC Set;
\end_layout

\begin_layout Enumerate
# of Victim Entries in HTRVC Set + # of Valid MT LLC Lines in Set ≤ LLC
 Set Associativity.
\end_layout

\begin_layout Standard
HT lines refer to the cache lines that are brought by HT requests.
 From the above two invariants, we can easily conclude that: # of HT Lines
 in the LLC Set+ # of Valid MT LLC Lines in Set ≤ LLC Set Associativity.
 Actions should be taken in LLC and HTRVC when filling an LLC line or servicing
 an incoming LLC request.
\end_layout

\begin_layout Subsubsection
Actions taken on Filling an LLC Line
\end_layout

\begin_layout Standard
When filling an LLC line, we should consider five cases:
\end_layout

\begin_layout Enumerate
An HT request evicts an INVALID line.
 In this case, no eviction is needed.
\end_layout

\begin_layout Enumerate
An HT request evicts an LLC line which is previously brought by an MT request.
 In this case, eviction is needed to make room for the incoming HT request.
\end_layout

\begin_layout Enumerate
An HT request evicts an LLC line which is previously brought by an HT request.
 In this case, eviction is needed to make room for the incoming HT request.
\end_layout

\begin_layout Enumerate
An MT request evicts an LLC line which is previously brought by an HT request.
 In this case, eviction is needed to make room for the incoming MT request.
\end_layout

\begin_layout Enumerate
An MT request evicts an LLC line which is previously brought by an MT request,
 and there exists one line that is brought by an HT request.
 In this case, eviction is needed to make room for the incoming MT request.
\end_layout

\begin_layout Standard
Specific actions taken on the above five cases are listed in Fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:LLC-Line-Brought-In"

\end_inset

, where hitInLLC: whether the request hits in LLC or not, requesterIsHT:
 whether the request comes from HT or not, hasEviction: whether the request
 needs to evict some data, lineFoundIsHT: whether the LLC line found is
 brought by HT or not, and htRequestFound(): whether there is at least one
 line in the LLC set that is brought by HT.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,frame=single,language=Java"
inline false
status open

\begin_layout Plain Layout

//HT miss
\end_layout

\begin_layout Plain Layout

if(!hitInLLC && requesterIsHT) {
\end_layout

\begin_layout Plain Layout

  totalHtRequests++;
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

//Case 1
\end_layout

\begin_layout Plain Layout

if(requesterIsHT && !hitInLLC && !hasEviction) {
\end_layout

\begin_layout Plain Layout

  llc.setHT(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  htrvc.insertNullEntry(set);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 2
\end_layout

\begin_layout Plain Layout

else if(requesterIsHT && !hitInLLC && hasEviction && !lineFoundIsHT) {
\end_layout

\begin_layout Plain Layout

  llc.setHT(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  htrvc.insertDataEntry(set, llcLine.tag);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 3
\end_layout

\begin_layout Plain Layout

else if(requesterIsHT && !hitInLLC && hasEviction && lineFoundIsHT) {
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 4
\end_layout

\begin_layout Plain Layout

else if(!requesterIsHT && !hitInLLC && hasEviction && lineFoundIsHT) {
\end_layout

\begin_layout Plain Layout

  llc.setMT(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  htrvc.removeLRU(set);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 5
\end_layout

\begin_layout Plain Layout

else if(!requesterIsHT && !lineFoundIsHT) {
\end_layout

\begin_layout Plain Layout

  if(htRequestFound()) {
\end_layout

\begin_layout Plain Layout

    htrvc.removeLRU(set);
\end_layout

\begin_layout Plain Layout

    htrvc.insertDataEntry(set, llcLine.tag);
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Actions Taken When Fillling an LLC Line
\begin_inset CommandInset label
LatexCommand label
name "fig:LLC-Line-Brought-In"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Actions taken on Servicing an Incoming LLC Request
\end_layout

\begin_layout Standard
When servicing an incoming LLC request, either hit or miss, we should consider
 four cases:
\end_layout

\begin_layout Enumerate
LLC miss and victim hit, which indicates a bad HT request.
 This happens when HT request evicts useful data.
\end_layout

\begin_layout Enumerate
HT LLC hit, which indicates a good HT request.
 This happens when HT requested data is hit by MT request before evicted
 data.
\end_layout

\begin_layout Enumerate
HT LLC hit and victim hit.
 This happens when useful data is evicted and brought back in by HT request.
\end_layout

\begin_layout Enumerate
MT LLC hit and victim hit.
 This happens when useful data is evicted and brought back in by HT request
 and hit to by MT request.
\end_layout

\begin_layout Standard
Specific actions taken on the above five cases are listed in Fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Servicing-MT-and-HT-requests"

\end_inset

, where mtHit: whether the request comes from MT and hits in the LLC, htHit:
 whether the request comes from HT and hits in the LLC, and vtHit: whether
 the request comes from MT and hits in the HTRVC.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\scriptsize\ttfamily},breaklines=true,frame=single,language=Java"
inline false
status open

\begin_layout Plain Layout

//Case 1
\end_layout

\begin_layout Plain Layout

if(!mtHit && !htHit && vtHit) {
\end_layout

\begin_layout Plain Layout

  badHtRequests++;
\end_layout

\begin_layout Plain Layout

  htrvc.setLRU(set, vtLine.way);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 2
\end_layout

\begin_layout Plain Layout

else if(!mtHit && htHit && !vtHit) {
\end_layout

\begin_layout Plain Layout

  llc.setMT(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  goodHtRequests++;
\end_layout

\begin_layout Plain Layout

  htrvc.removeLRU(set);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 3
\end_layout

\begin_layout Plain Layout

else if(!mtHit && htHit && vtHit) {
\end_layout

\begin_layout Plain Layout

  llc.setMT(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  htrvc.setLRU(set, vtLine.way);
\end_layout

\begin_layout Plain Layout

  htrvc.removeLRU(set);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 4
\end_layout

\begin_layout Plain Layout

else if(mtHit && !htHit && vtHit) {
\end_layout

\begin_layout Plain Layout

  htrvc.setLRU(set, vtLine.way);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Actions Taken When Servicing an LLC Request
\begin_inset CommandInset label
LatexCommand label
name "fig:Servicing-MT-and-HT-requests"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Standard
Three benchmarks have been evaluated in this paper: mst and em3d in Olden,
 and 429.mcf in CPU2006.
 All three benchmarks are cross-compiled with “-O3”.
 The HT parameters for each benchmark are set empirically to: mst: lookahead=20,
 blocksize=10; em3d: lookahead=10, blocksize=10; 429.mcf: lookahead=10, blocksize
=10.
 
\end_layout

\begin_layout Enumerate
4M LLC, mst 1000, HT version (params: LOOKAHEAD=20, STRIDE=10), detailed
 simulation vs checkpointed simulation
\end_layout

\begin_deeper
\begin_layout Itemize
detailed simulation
\end_layout

\begin_deeper
\begin_layout Itemize
llc.totalHtRequests=584655 
\end_layout

\begin_layout Itemize
llc.goodHtRequests=584579 
\end_layout

\begin_layout Itemize
llc.badHtRequests=0
\end_layout

\begin_layout Itemize
llc.uglyHtRequests=76
\end_layout

\end_deeper
\begin_layout Itemize
checkpointed simulation
\end_layout

\begin_deeper
\begin_layout Itemize
llc.totalHtRequests=585150
\end_layout

\begin_layout Itemize
llc.goodHtRequests=585079
\end_layout

\begin_layout Itemize
llc.badHtRequests=0
\end_layout

\begin_layout Itemize
llc.uglyHtRequests=71
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
4M LLC, mst 10000, HT version, checkpointed simulation
\end_layout

\begin_deeper
\begin_layout Itemize
pending...
\end_layout

\end_deeper
\begin_layout Enumerate
4M LLC, em3d 1000, HT version (params: LOOKAHEAD=20), detailed simulation
\end_layout

\begin_deeper
\begin_layout Itemize
llc.totalHtRequests=539
\end_layout

\begin_layout Itemize
llc.goodHtRequests=517
\end_layout

\begin_layout Itemize
llc.badHtRequests=0
\end_layout

\begin_layout Itemize
llc.uglyHtRequests=22
\end_layout

\end_deeper
\begin_layout Enumerate
4M LLC, em3d 400000, HT version, checkpointed simulation
\end_layout

\begin_deeper
\begin_layout Itemize
pending...
\end_layout

\end_deeper
\begin_layout Enumerate
1M LLC, mst 1000, HT version (snapshot at cycle #351552909)
\end_layout

\begin_deeper
\begin_layout Itemize
llc.mtMisses: 1431649 
\end_layout

\begin_layout Itemize
llc.totalHtRequests: 683517
\end_layout

\begin_layout Itemize
llc.usefulHtRequests: 683253
\end_layout

\begin_layout Itemize
llc.ht_accuracy: 99.96% 
\end_layout

\begin_layout Itemize
llc.ht_coverage: 47.72% 
\end_layout

\begin_layout Itemize
llc.goodHtRequests: 683246 
\end_layout

\begin_layout Itemize
llc.badHtRequests: 1 
\end_layout

\begin_layout Itemize
llc.uglyHtRequests: 270 
\end_layout

\begin_layout Itemize
llc.lateHtRequests: 69075
\end_layout

\end_deeper
\begin_layout Section
Previous Work
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "Mehta2004"

\end_inset

 presents a taxonomy of hardware prefetches based on the idea of shared
 cache pollution.
 A hardware structure called the Evict Table (ET) is added to the LLC to
 gauge the amount of shared cache pollution caused by hardware prefetching.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Jerger2006"

\end_inset


\end_layout

\begin_layout Standard
TODOs: previous work on prefetch taxonomies.
 
\end_layout

\begin_layout Enumerate
Classic metrics of coverage and accuracy for h/w prefetches.
\end_layout

\begin_layout Enumerate
Good, bad and ugly breakdown of h/w prefetches.
 
\end_layout

\begin_layout Enumerate
More fine-grained breakdowns of h/w prefetches.
 
\end_layout

\begin_layout Enumerate
Any previous work on cache request breakdowns for helper threaded data prefetchi
ng? 
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
TODOs: our work: what? how? result? Further work?
\end_layout

\begin_layout Section*
Acknowlegments
\end_layout

\begin_layout Standard
This work was supported by the National Natural Science Foundation of China
 under the contract No.
 61070029.
 
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "ref"
options "IEEEtran"

\end_inset


\end_layout

\end_body
\end_document
