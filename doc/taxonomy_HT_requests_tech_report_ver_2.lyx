#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass paper
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement tbph
\paperfontsize default
\spacing onehalf
\use_hyperref true
\pdf_title "Characterizing Intra-Application LLC Interference Caused by Helper Threaded Data Prefetching on CMPs"
\pdf_author "Min Cai, Zhimin Gu"
\pdf_keywords "Chip multiprocessors, helper threaded inter-core data prefetching, cache replacement, cache pollution, intra-application LLC interference"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Characterizing Intra-Application LLC Interference Caused by Helper Threaded
 Data Prefetching on CMPs
\end_layout

\begin_layout Author
Min
\begin_inset space ~
\end_inset

Cai, Zhimin
\begin_inset space ~
\end_inset

Gu
\begin_inset Foot
status open

\begin_layout Plain Layout
Min Cai, School of Computer Science and Technology, Beijing Institute of
 Technology, Beijing, China, e-mail: 
\begin_inset CommandInset href
LatexCommand href
target "min.cai.china@gmail.com"

\end_inset

.
\end_layout

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
Zhimin Gu, School of Computer Science and Technology, Beijing Institute
 of Technology, Beijing, China, e-mail: 
\begin_inset CommandInset href
LatexCommand href
target "zmgu@x263.net"

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
For workloads exhibiting irregular memory access patterns, helper threaded
 data prefetching on shared cache chip multiprocessors (CMPs) speculatively
 issue last-level cache (LLC) requests to the predicted memory addresses
 ahead of computation core references.
 Effective helper threaded data prefetching on CMPs demands that the helper
 thread (HT) should issue correct and timely LLC requests just before the
 main thread (MT) references them.
 Unfortunately, this ideal case can not be fulfilled in the practical implementa
tions of helper threaded data prefetching on CMPs: inaccurate and/or untimely
 LLC requests coming from helper thread could not contribute to the main
 thread performance, but instead stress and pollute LLC if no effective
 LLC replacement and pollution-aware feedback techniques are employed.
\end_layout

\begin_layout Abstract
This paper characterizes the degree by which intra-application LLC interference
 is caused by inter-core data prefetches in the above helper threaded data
 prefetching scheme.
 Based on cycle-accurate architectural simulation of the memory intensive
 benchmark mst from Olden, we first adapt traditional approaches to characterizi
ng hardware prefetches such as prefetch accuracy, coverage and lateness,
 useful vs.
 useless prefetches to characterize helper threaded data prefetching on
 CMPs.
 Based on the insights from these characterizations, we then propose a fine-grai
ned taxonomy of helper threaded inter-core data prefetches to study the
 intricate interactions between intra-application LLC interference and parameter
s of the helper threaded data prefetching scheme.
 Experimental results show that: (1) there is non-trivial intra-application
 LLC interference caused by inter-core data prefetches in helper-threaded
 data prefetching on CMPs; (2) selecting proper parameters, such as lookahead
 and stride, of the helper threaded data prefetching scheme play a key role
 in maximizing the performance of the scheme.
 Overall, our characterizations are important in interpreting the effectiveness
 of software-initiated helper threaded data prefetching on CMPs by cycle-accurat
e architectural simulation, and highlighting the opportunities and challenges
 of optimizing helper threaded data prefetching on CMPs in a dynamic and
 feedback-directed way.
\end_layout

\begin_layout Keywords
Chip multiprocessors, helper threaded data prefetching on CMPs, cache replacemen
t, cache pollution, intra-application LLC interference
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
For workloads exhibiting irregular memory access patterns, helper threaded
 data prefetching on shared cache chip multiprocessors (CMPs) speculatively
 issue last-level cache (LLC) requests to the predicted memory addresses
 ahead of computation core references.
 Effective helper threaded data prefetching on CMPs demands that the helper
 thread (HT) should issue correct and timely LLC requests just before the
 main thread (MT) references them.
 Unfortunately, this ideal case can not be fulfilled in the practical implementa
tions of helper threaded data prefetching on CMPs: inaccurate and/or untimely
 LLC requests coming from helper thread could not contribute to the main
 thread performance, but instead stress and pollute LLC if no effective
 LLC replacement and pollution-aware feedback techniques are employed.
\end_layout

\begin_layout Standard
This paper characterizes the degree by which intra-application LLC interference
 is caused by inter-core data prefetches in the above helper threaded data
 prefetching scheme.
 Based on cycle-accurate architectural simulation of the memory intensive
 benchmark mst from Olden, we first adapt traditional approaches to characterizi
ng hardware prefetches such as prefetch accuracy coverage and lateness,
 useful vs.
 useless prefetches to characterize helper threaded data prefetching on
 CMPs.
 Based on the insights from these characterizations, we then propose a fine-grai
ned taxonomy of helper threaded inter-core data prefetches to study the
 intricate interactions between intra-application LLC interference and parameter
s of the helper threaded data prefetching scheme.
 Experimental results show that: (1) there is non-trivial intra-application
 LLC interference caused by inter-core data prefetches in helper-threaded
 data prefetching on CMPs; (2) selecting proper parameters, such as lookahead
 and stride, of the helper threaded data prefetching scheme play a key role
 in maximizing the performance of the scheme.
 Overall, our characterizations are important in interpreting the effectiveness
 of software-initiated helper threaded data prefetching on CMPs by cycle-accurat
e architectural simulation, and highlighting the opportunities and challenges
 of optimizing helper threaded data prefetching on CMPs in a dynamic and
 feedback-directed way.
\end_layout

\begin_layout Standard

\shape italic
\color red
(to be expanded)
\end_layout

\begin_layout Section
Methodology
\end_layout

\begin_layout Subsection
Target CMP Architecture
\end_layout

\begin_layout Standard
As shown in Fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Simulated-CMP-Architecture"

\end_inset

, the simulated target CMP architecture has two cores where each core is
 a two-way SMT with its own private L1 caches (32KB 4-way data caches and
 32KB 4-way instruction caches).
 Both cores share a 96KB 8-way L2 cache.
 MESI inclusive directory coherence is maintained between L1 caches.
 An LRU cache called HTRVC is attached to the L2 cache to implement the
 taxonomy of helper thread LLC requests, as will be explained in the next
 section.
 Detailed microarchitecture parameters are listed in Tab.
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Baseline-Hardware-Configurations"

\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/itecgo/Archimulator/doc/res/cacheconfig.pdf
	scale 80
	BoundingBox 26bp 480bp 575bp 750bp
	clip

\end_inset


\begin_inset VSpace defskip
\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Target CMP Architecture
\begin_inset CommandInset label
LatexCommand label
name "fig:Simulated-CMP-Architecture"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\size small
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Pipeline
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
4-wide superscalar out-of-order core; 2 cores, 2 threads per core
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Physical register file capacity: 128
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Decode buffer capacity: 96
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Reorder buffer capacity: 96
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Load store queue capacity: 48
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Branch Predictors
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Perfect branch predictor
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Execution Units
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Count
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Operation Lat.
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Issue Lat.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Int ALU
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
8
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Int Multiply
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Int Division
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
20
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
19
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Fp Add
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
8
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Fp Compare
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Fp Convert
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Fp Multiply
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
8
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Fp Division
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
40
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
20
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Fp Square Root
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
80
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
40
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Read Port
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Write Port
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
1
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Cache Geometries
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="5">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Size
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Associativity
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Line Size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Hit Lat.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
ICache
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
32KB
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
64B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
DCache
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
32KB
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
64B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
L2 Cache
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
96KB
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
8
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
64B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
10
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Interconnect
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Switch based P2P topology, 32B link width
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Main Memory
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
4GB, 200-cycle fixed latency
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\size default

\begin_inset VSpace defskip
\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Baseline Hardware Configurations
\begin_inset CommandInset label
LatexCommand label
name "tab:Baseline-Hardware-Configurations"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Simulation Framework
\end_layout

\begin_layout Standard
We use an in-house CMP architectural simulator named Archimulator in our
 experiments mentioned in this work.
 Archimulator is a flexible execution-driven architectural simulator written
 in Java and running on Linux.
 It provides fast forward functional simulation and cycle-accurate application-o
nly simulation of MIPS II executables on multicore architectures consisting
 of out-of-order super-scalar cores and configurable memory hierarchy of
 directory-based MESI coherence.
 It has basic support of simulating Pthreads based multithreaded workloads.
 
\end_layout

\begin_layout Paragraph
Static Software Context to Hardware Thread Mappings
\end_layout

\begin_layout Standard
In a typical Pthreads based helper thread program, there are three threads
 when running: main thread, helper thread and the Pthreads manager thread.
 The Pthreads manager thread takes the role of spawning, suspending and
 resuming helper thread by passing signals to helper thread.
 Consider a simulated target multicore machine which has two cores where
 each core supports two hardware threads.
 In our application-only simulation using Archimulator, without the OS intervent
ion, one hardware thread can only run at least one software context (or
 simply called thread).
 Therefore, the typical software context to hardware thread mappings can
 be: C0T0 
\begin_inset Formula $\rightarrow$
\end_inset

 main thread, C0T1 
\begin_inset Formula $\rightarrow$
\end_inset

 Pthreads manager thread, C1T0 
\begin_inset Formula $\rightarrow$
\end_inset

 helper thread (C = core, T = thread), as shown in Fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Simulated-CMP-Architecture"

\end_inset

.
 We use this context mapping in the following discussions.
 
\end_layout

\begin_layout Subsection
Benchmarks and Input Sets
\end_layout

\begin_layout Standard
We perform our evaluation using the original version and manually coded
 helper threaded version of mst in the Olden pointer-traveral benchmark
 suite.
 All applications are cross-compiled using gcc flag “-O3” and run until
 completion using cycle-accurate simulation.
 Input set for mst is 
\begin_inset Quotes eld
\end_inset

2048 1
\begin_inset Quotes erd
\end_inset

.
 Default helper threaded prefetching lookahead and stride are 20 and 10,
 respectively.
\end_layout

\begin_layout Section
Characterizing LLC Interference Caused by Helper Threaded Prefetching
\end_layout

\begin_layout Subsection
The Scheme of Helper Threaded Data Prefetching on Shared-Cache CMPs
\end_layout

\begin_layout Standard
As illustrated in Fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Helper-Threaded-Inter-Core-Data-Prefetching"

\end_inset

, the workflow of helper threaded data prefetching on shared-cache CMPs
 we implement here can be described as follows.
 
\end_layout

\begin_layout Enumerate
The helper thread is spawned in the entry point 
\shape italic
main()
\shape default
 of the program; 
\end_layout

\begin_layout Enumerate
The helper thread remains dormant until some caller of the target hotspot
 function has been invoked and code placed in the caller wakes up the helper
 thread to let it start the 
\shape italic
prelude
\shape default
 where the code in the helper thread skips some iterations of pointer traversals
 (i.e., there is no prefetch issued) to compensate the long time used for
 data prefetching in the helper thread as compared to the short time used
 in computation work in the main thread; 
\end_layout

\begin_layout Enumerate
The helper thread enters a 
\shape italic
steady state
\shape default
 of issuing LLC prefetch requests in loop iterations of pointer traversals
 ahead of the main thread until the execution of the program has passed
 some point(s) in the target hotspot function; 
\end_layout

\begin_layout Enumerate
The code in helper thread is synchronizing pointers with the main thread
 and begin the next turn of servicing hotspots; 
\end_layout

\begin_layout Enumerate
After all the prefetching work is done, the helper thread is destroyed in
 main().
 
\end_layout

\begin_layout Standard
Two parameters in the helper threaded prefetching scheme controls its aggressive
ness: (1) the number of loop iterations of pointer traversals that the helper
 thread code skip after synchronizing with the main thread in the prelude
 is called lookahead; (2) the number of loop iterations of pointer traversals
 in which helper thread code issue LLC prefetch requests in the steady state
 is called stride.
 
\end_layout

\begin_layout Standard
In a traditional helper threaded prefetching scheme configuration, the values
 of 
\shape italic
lookahead
\shape default
 and 
\shape italic
stride
\shape default
 are hard coded.
 In our following proposed feedback directed mechanism, the processor changes
 the value of lookahead and stride using some temporary register to adjust
 the aggressiveness of the helper threaded prefetching scheme.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/itecgo/Archimulator/doc/ht_scheme.pdf
	scale 50
	BoundingBox 30bp 38bp 810bp 538bp
	clip

\end_inset


\begin_inset VSpace defskip
\end_inset


\begin_inset Caption

\begin_layout Plain Layout
The Scheme of Helper Threaded Data Prefetching on CMPs
\begin_inset CommandInset label
LatexCommand label
name "fig:Helper-Threaded-Inter-Core-Data-Prefetching"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Adapting Traditional Hardware Prefetching Metrics to Helper Threaded Prefetching
\end_layout

\begin_layout Standard
Traditionally, prefetch accuracy, coverage and lateness are used to evaluate
 the effectiveness of hardware prefetchers.
 In this section, we adapt the metrics to the helper threaded prefetching
 scheme and describe what the metrics mean under the helper threaded prefetching
 scheme.
\end_layout

\begin_layout Paragraph
Useful vs.
 Useless Helper Thread LLC Requests
\end_layout

\begin_layout Standard
Helper thread requests can be categorized into useful and useless helper
 thread requests 
\begin_inset CommandInset citation
LatexCommand cite
key "Srinivasan2004"

\end_inset

.
 A 
\shape italic
useful helper thread request
\shape default
 is one whose brought data is hit by a main thread request before it is
 replaced, while a 
\shape italic
useless helper thread request
\shape default
 is one whose brought data is replaced before it is hit by a main thread
 request.
 
\end_layout

\begin_layout Paragraph
Helper Thread LLC Request Accuracy
\end_layout

\begin_layout Standard

\shape italic
Helper thread LLC request accuracy
\shape default
 is a measure of how accurately the helper threaded prefetching scheme can
 predict and issue prefetch requests for the memory addresses that will
 be accessed by the main thread.
 It is defined as below
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Formula 
\[
Helper\: Threaded\: Prefetch\: Accuracy=\frac{Number\: of\: Useful\: Helper\: Thread\: LLC\: Requests}{Number\: of\: Helper\: Thread\: LLC\: Requests}
\]

\end_inset


\size default
where Number of Useful helper thread LLC Requests is the number of LLC lines
 brought by helper thread requests that are later on hit by helper thread
 requests.
 For benchmarks with high helper thread LLC request accuracy, performance
 increases as the aggressiveness of the helper threaded prefetching scheme
 is increased.
\end_layout

\begin_layout Paragraph
Helper Thread LLC Request Coverage
\end_layout

\begin_layout Standard

\shape italic
Helper thread LLC request coverage
\shape default
 is a measure of the fraction of all main thread LLC misses that can be
 eliminated by issuing helper thread LLC misses ahead.
 It is defined as below
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Formula 
\[
Helper\: Threaded\: Prefetch\: Coverage=\frac{Number\: of\: Useful\: Helper\: Thread\: LLC\: Requests}{Number\: of\: Main\: Thread\: LLC\: Requests\: WIthout\: No\: Prefetch}
\]

\end_inset


\end_layout

\begin_layout Paragraph
Helper Thread LLC Request Lateness
\end_layout

\begin_layout Standard

\shape italic
Helper thread LLC request lateness
\shape default
 is a measure of how timely the LLC requests generated in the helper thread
 are with respect to the LLC requests generated in the main thread that
 need the data brought by the helper thread.
 A helper thread LLC request is said to be late if its requested data has
 not yet returned from the main memory by the time an main thread LLC request
 references the data.
 Therefore, even though the helper thread LLC request is accurate, it can
 only partially hide the latency incurred by an LLC miss in the main thread.
 Helper thread
\shape italic
 LLC request lateness
\shape default
 can be defined as below
\end_layout

\begin_layout Standard

\size scriptsize
\begin_inset Formula 
\[
Helper\: Threaded\: Prefetch\: Lateness=\frac{Number\: of\: Late\: Helper\: Thread\: LLC\: Requests}{Number\: of\: Useful\: Helper\: Thread\: LLC\: Requests}
\]

\end_inset


\end_layout

\begin_layout Subsection
Characterizing Intra-application LLC interference
\end_layout

\begin_layout Subsubsection
Intra-Application Reuse Distances in Helper Threaded Data Prefetching on
 CMPs
\end_layout

\begin_layout Standard
The notion of reuse distance can shed light on how a pollution-aware taxonomy
 of helper thread LLC requests can be constructed.
 The traditional intra-thread reuse distance of a reference to data element
 x is defined as the number of unique memory references between two consecutive
 accesses of x in the same thread (or ∞ if the element has not been referenced
 thereafter).
 In a k-way set-associative cache a cache miss with reuse distance rd can
 be classified by the value of reuse distance as below
\end_layout

\begin_layout Enumerate
rd < k indicates it is a 
\shape italic
conflict miss
\end_layout

\begin_layout Enumerate
k<= rd < 
\begin_inset Formula $\infty$
\end_inset

 indicates it is a 
\shape italic
capacity miss
\end_layout

\begin_layout Enumerate
rd = 
\begin_inset Formula $\infty$
\end_inset

 indicates it is a 
\shape italic
cold miss
\end_layout

\begin_layout Standard
To accomodate the case where one thread Tb accesses data element x that
 has been previously brought into the cache by another thread Ta, we introduce
 the notion of Ta-Tb inter-thread reuse distance, as compared to the traditional
 intra-thread reuse distance applied to either Ta or Tb.
\end_layout

\begin_layout Standard
To show why the notion of inter-thread reuse distance is important in the
 helper threaded prefetching scheme as compared to the traditional notion
 of intra-thread reuse distance, we can consider the mst benchmark in the
 Olden suite.
 Its pointer traversing code structure inherently exhibits irregular memory
 access pattern in its original, single threaded version, which renders
 the common LRU replacement policy inefficient to reduce LLC misses.
 Here we use 
\begin_inset Formula $RD_{MT}$
\end_inset

 to refer to the 
\shape italic
intra-thread reuse distance
\shape default
 in the main thread, and 
\begin_inset Formula $ITRD_{HT-MT}$
\end_inset

 to refer to the 
\shape italic
inter-thread reuse distance
\shape default
 between helper thread and main thread where a data element is first brought
 to LLC by helper thread, and later on used by main thread.
 Therefore, the values of 
\begin_inset Formula $RD_{MT}$
\end_inset

 in most main thread LLC requests is high which reflects the irregular memory
 access pattern in mst.
 The values of 
\begin_inset Formula $ITRD_{HT-MT}$
\end_inset

 in helper thread LLC requests should be very small when the helper threaded
 prefetching scheme is efficient to reduce LLC misses in main thread where
 for most helper thread LLC miss, an immediate followup main thread LLC
 request will access the data brought by the previous LLC request and hit
 in the LLC.
 Otherwise, large values of 
\begin_inset Formula $ITRD_{HT-MT}$
\end_inset

 indicate the inefficiency of the helper threaded prefetching scheme where
 most data brought by helper thread is replaced before used by main thread.
\end_layout

\begin_layout Standard
Helper thread induced cache pollution with respect to main thread performance
 only happens when helper thread LLC requests evict the data that are previously
 brought by main thread and immediately referenced again by main thread
 LLC requests, but rarely happens when helper thread LLC requests evict
 any data that was previously brought by main thread but will not be used
 by main thread in the near future, which is typically the case in mst which
 exhibits a thrashing memory access pattern and thus most of the data requested
 from its delinquent PCs have instant main thread intra-thread reuse distances
 but small helper thread-main thread inter-thread reuse distances, which
 renders traditional intra-thread reuse distance prediction based LLC replacemen
t useless for mst with helper thread.
 Fortunately, as we will see, HT-MT inter-thread reuse distance prediction
 based LLC replacement can be useful for mst with helper thread.
\end_layout

\begin_layout Subsubsection
A Simple Taxonomy of Helper Thread LLC Requests Based on Intra-Application
 Reuse Distances
\end_layout

\begin_layout Standard
Based on the notions of HT-MT inter-thread reuse distance (
\begin_inset Formula $ITRD_{HT-MT}$
\end_inset

) and main thread intra-thread reuse distance (
\begin_inset Formula $RD_{MT}$
\end_inset

), we can construct a pollution aware taxonomy of helper thread LLC requests
 where helper thread LLC requests are classified into three types: good,
 bad and ugly.
 Let's assume when an helper thread LLC request referencing data h evicts
 an LLC line containing the victim data v which is brought by main thread,
 and afterwards the LLC line containing h is evicted by an main thread LLC
 request with data m.
 Therefore, there are two LLC replacement involved: first h evicts v and
 then m evicts h.
 We use 
\begin_inset Formula $RD_{MT}(v)$
\end_inset

, 
\begin_inset Formula $ITRD_{HT-MT}(h)$
\end_inset

 and 
\begin_inset Formula $RD_{MT}(m)$
\end_inset

 to denote the number of distinct data elements that have been referenced
 between the time when h evicts v and the time v, h and m is accessed again,
 respectively.
 The greater the reuse distance of the data, the farther the data will be
 referenced again in time.
 An LLC replacement is considered as optimal if the replacement makes the
 data with small reuse distance evicts the data with larger reuse distance,
 otherwise the replacement is considered as non-optimal.
 We have
\end_layout

\begin_layout Enumerate
if 
\begin_inset Formula $ITRD_{HT-MT}(h)$
\end_inset

 < 
\begin_inset Formula $RD_{MT}(v)$
\end_inset

 < 
\begin_inset Formula $RD_{MT}(m)$
\end_inset

, then the helper thread LLC request is considered as 
\shape italic
good 
\shape default
because it evicts the data that has larger reuse distance than its own.
 Its data is hit by the main thread before evicted.
 It has posive impact on the main thread performance since it reduce one
 main thread miss;
\end_layout

\begin_layout Enumerate
if 
\begin_inset Formula $RD_{MT}(v)$
\end_inset

 < 
\begin_inset Formula $ITRD_{HT-MT}(h)$
\end_inset

 < 
\begin_inset Formula $RD_{MT}(m)$
\end_inset

, then the helper thread LLC request is considered as
\shape italic
 bad
\shape default
 because it evicts the data that has smaller reuse distance than its own.
 It displaces an LLC line that will later be needed by the main thread.
 It is harmful for main thread performance which should be prevented as
 much as possible; 
\end_layout

\begin_layout Enumerate
if 
\begin_inset Formula $RD_{MT}(m)$
\end_inset

 < 
\begin_inset Formula $RD_{MT}(v)$
\end_inset

 and 
\begin_inset Formula $ITRD_{HT-MT}(h)$
\end_inset

, then the helper thread LLC request is considered 
\shape italic
ugly
\shape default
 because both its data and its victim data have larger reuse distances than
 the data h.
 It has little performance impact on main thread performance because the
 requested data is not referenced by main thread before evicted and it does
 not evict any data that will be used by main thread.
\end_layout

\begin_layout Standard
We can see that, good and bad helper thread LLC requests are caused by the
 optimal and non-optimal LLC replacement in the presence of helper threaded
 data prefetching on CMPs, respectively.
 We can conclude that
\end_layout

\begin_layout Enumerate
Low 
\begin_inset Formula $ITRD_{HT-MT}$
\end_inset

 is an indicator of good performance of the helper threaded prefetching
 scheme;
\end_layout

\begin_layout Enumerate
Medium 
\begin_inset Formula $ITRD_{HT-MT}$
\end_inset

 signals those potentially late helper thread prefetches that, depend on
 the LLC replacement policy, may be useful, partially useful or totally
 useless for main thread performance;
\end_layout

\begin_layout Enumerate
High 
\begin_inset Formula $ITRD_{HT-MT}$
\end_inset

 implies helper thread and main thread is not synchronized well or the amount
 of (computational and memory access) work is not distributed and balanced
 well between the main thread and helper thread.
\end_layout

\begin_layout Subsubsection
The Refined Taxonomy of Helper Thread LLC Requests
\end_layout

\begin_layout Standard
As noted in the previous section, good helper thread LLC requests can be
 further divided into timely requests and late requests.
 A helper thread request is called 
\shape italic
late helper thread request 
\shape default
if its requested data has not yet returned from the main memory by the time
 an main thread LLC request references the data.
 Late helper thread requests only partially hide the LLC miss latency in
 main thread requests, but they are good indicators for potential performance
 improvement of the helper threaded prefetching scheme because late helper
 thread requests may be converted to timely helper thread requests by adjusting
 the aggressiveness parameters of the helper threaded prefetching scheme,
 i.e., lookahead and stride.
 
\end_layout

\begin_layout Standard
As we can observe that, if the helper thread request is too late, then when
 the request arrives at LLC, it find its referenced data is already present
 in either LLC or LLC MSHRs.
 Therefore, we can add 
\shape italic
redundant_mshr helper thread request 
\shape default
and
\shape italic
 redundant_cache helper thread request 
\shape default
to the taxonomy.
 The final refined taxonomy of helper thread LLC requests is summarized
 in Fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:taxonomy_ht_llc_requests"

\end_inset

.
\shape italic
\color red
(to be explained in detail)
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename prefetch_timeline.pdf
	scale 50
	BoundingBox 30bp 25bp 810bp 530bp
	clip

\end_inset


\begin_inset VSpace defskip
\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Taxonomy of Helper Thread LLC Requests
\begin_inset CommandInset label
LatexCommand label
name "fig:taxonomy_ht_llc_requests"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Mechanisms and Algorithms for Implementing the Taxonomy
\end_layout

\begin_layout Subsubsection
LLC request and replacement event tracking
\end_layout

\begin_layout Standard
To monitor the request and replacement activities in LLC, we need to consider
 the event when the LLC receives a request coming from the upper level cache,
 whether it is a hit or a miss.
 The event has a few important properties to be used in the experiment,
 e.g., the address of the requested LLC line, the requester memory hierarchy
 access, line found in the LLC, a boolean value indicating whether the request
 hits in the LLC, and a boolean value indicating whether the request needs
 to evict some LLC line.
 This event is similar to one used in 
\begin_inset CommandInset citation
LatexCommand cite
key "Mehta2004"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Helper Thread LLC request state tracking
\end_layout

\begin_layout Standard
In order to track the helper thread request states in the LLC, we need to
 add one field to each LLC line to indicate whether the line is brought
 by the main thread or the helper thread or otherwise invalid, as depicted
 in Fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Simulated-CMP-Architecture"

\end_inset

.
 
\end_layout

\begin_layout Subsubsection
Helper Thread LLC request victim state tracking
\end_layout

\begin_layout Standard
In order to track victims replaced by helper thread requests, we need to
 add an LRU cache named 
\shape italic
Helper Thread Request Victim Cache (HTRVC)
\shape default
 to maintain the LLC lines that are evicted by helper thread requests.
 As shown in Fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Simulated-CMP-Architecture"

\end_inset

, the HTRVC has the same structure of the LLC, but there is no direct mapping
 between LLC lines and HTRVC lines.
 One field called HTRequestTag is added to HTRVC to enable reverse lookup
 in HTRVC by the helper thread request tag in LLC.
 HTRVC has the sole purpose of profiling, so it has no impact on performance.
\end_layout

\begin_layout Subsubsection
Detecting Late Helper Thread LLC Requests
\end_layout

\begin_layout Standard
Lastly, in order to measure late helper thread requests, we need to identify
 the event when an main thread request hits to an LLC line which is being
 brought by an inflight helper thread request coming from the upper level
 cache.
 This can be accomplished by monitoring the LLC Miss Status Holding Register
 (MSHR).
 MSHR is a hardware structure that keeps track of all in-flight memory requests.
 An helper thread LLC request is late if an main thread LLC request for
 the same address is generated while the helper thread LLC request is in
 the LLC MSHR waiting for main memory.
\end_layout

\begin_layout Subsubsection
Tracking Helper Thread LLC Requests and Victims
\end_layout

\begin_layout Standard
There are two invariants that should be maintained
\end_layout

\begin_layout Enumerate
# of helper thread Lines in the LLC Set = # of Victim Entries in the HTRVC
 Set;
\end_layout

\begin_layout Enumerate
# of Victim Entries in HTRVC Set + # of Valid main thread LLC Lines in Set
 ≤ LLC Set Associativity.
\end_layout

\begin_deeper
\begin_layout Standard
Helper thread lines refer to the cache lines that are brought by helper
 thread requests.
 From the above two invariants, we can easily conclude that: # of helper
 thread Lines in the LLC Set+ # of Valid main thread LLC Lines in Set ≤
 LLC Set Associativity.
 Actions should be taken in LLC and HTRVC when filling an LLC line or servicing
 an incoming LLC request.
\end_layout

\end_deeper
\begin_layout Paragraph
Actions taken on Inserting an LLC Line
\end_layout

\begin_layout Standard
When filling an LLC line, we should consider four cases
\end_layout

\begin_layout Enumerate
An helper thread request evicts an INVALID line.
 In this case, no eviction is needed.
\end_layout

\begin_layout Enumerate
An helper thread request evicts an LLC line which is previously brought
 by an main thread request.
 In this case, eviction is needed to make room for the incoming helper thread
 request.
\end_layout

\begin_layout Enumerate
An helper thread request evicts an LLC line which is previously brought
 by an helper thread request.
 In this case, eviction is needed to make room for the incoming helper thread
 request.
\end_layout

\begin_layout Enumerate
An main thread request evicts an LLC line which is previously brought by
 an helper thread request.
 In this case, eviction is needed to make room for the incoming main thread
 request.
\end_layout

\begin_layout Standard
Specific actions taken on the above five cases are listed in Fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:inserting-an-LLC-line"

\end_inset

, where hitInLLC: whether the request hits in LLC or not, requesterIsHT:
 whether the request comes from helper thread or not, hasEviction: whether
 the request needs to evict some data, lineFoundIsHT: whether the LLC line
 found is brought by helper thread or not, and htRequestFound(): whether
 there is at least one line in the LLC set that is brought by helper thread.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\small},breaklines=true,frame=single,language=Java"
inline false
status open

\begin_layout Plain Layout

//Case 1
\end_layout

\begin_layout Plain Layout

if(requesterIsHelperThread && !hitInLLC && !hasEviction) {
\end_layout

\begin_layout Plain Layout

  llc.setHelperThread(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  htrvc.insertNullEntry(set);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 2
\end_layout

\begin_layout Plain Layout

else if(requesterIsHelperThread && !hitInLLC && hasEviction && !lineFoundIsHelpe
rThread) {
\end_layout

\begin_layout Plain Layout

  llc.setHelperThread(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  htrvc.insertDataEntry(set, llcLine.tag);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 3
\end_layout

\begin_layout Plain Layout

else if(requesterIsHelperThread && !hitInLLC && hasEviction && lineFoundIsHelper
Thread) {
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 4
\end_layout

\begin_layout Plain Layout

else if(!requesterIsHelperThread && !hitInLLC && hasEviction && lineFoundIsHelpe
rThread) {
\end_layout

\begin_layout Plain Layout

  llc.setMainThread(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  htrvc.removeLRU(set);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Actions Taken When Inserting an LLC Line
\begin_inset CommandInset label
LatexCommand label
name "fig:inserting-an-LLC-line"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Actions taken on Servicing an Incoming LLC Request
\end_layout

\begin_layout Standard
When servicing an incoming LLC request, either hit or miss, we should consider
 four cases:
\end_layout

\begin_layout Enumerate
LLC miss and victim hit, which indicates a bad helper thread request.
 This happens when helper thread request evicts useful data.
\end_layout

\begin_layout Enumerate
Helper thread LLC hit, which indicates a good helper thread request.
 This happens when helper thread requested data is hit by main thread request
 before evicted data.
\end_layout

\begin_layout Enumerate
Helper thread LLC hit and victim hit.
 This happens when useful data is evicted and brought back in by helper
 thread request.
\end_layout

\begin_layout Enumerate
Main thread LLC hit and victim hit.
 This happens when useful data is evicted and brought back in by helper
 thread request and hit to by main thread request.
\end_layout

\begin_layout Standard
Specific actions taken on the above five cases are listed in Fig.
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Servicing-an-LLC-Request"

\end_inset

, where mtHit: whether the request comes from main thread and hits in the
 LLC, htHit: whether the request comes from helper thread and hits in the
 LLC, and vtHit: whether the request comes from main thread and hits in
 the HTRVC.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\small},breaklines=true,frame=single,language=Java"
inline false
status open

\begin_layout Plain Layout

//Case 1
\end_layout

\begin_layout Plain Layout

if(!mainThreadHit && !helperThreadHit && victmHit) {
\end_layout

\begin_layout Plain Layout

  badHelperThreadRequests++;
\end_layout

\begin_layout Plain Layout

  htrvc.clearVictimLine(set, victmLine.way);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 2
\end_layout

\begin_layout Plain Layout

else if(!mainThreadHit && helperThreadHit && !victmHit) {
\end_layout

\begin_layout Plain Layout

  llc.setMainThread(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  (timely or late)HelperThreadRequests++;
\end_layout

\begin_layout Plain Layout

  htrvc.invalidateVictimLine(set, wayOfVictimLine);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 3
\end_layout

\begin_layout Plain Layout

else if(!mainThreadHit && helperThreadHit && victmHit) {
\end_layout

\begin_layout Plain Layout

  llc.setMainThread(set, llcLine.way);
\end_layout

\begin_layout Plain Layout

  htrvc.invalidateVictimLine(set, wayOfVictimLine);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

//Case 4
\end_layout

\begin_layout Plain Layout

else if(mainThreadHit && !helperThreadHit && victmHit) {
\end_layout

\begin_layout Plain Layout

  htrvc.clearVictimLine(set, victmLine.way);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace defskip
\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Actions Taken When Servicing an LLC Request
\begin_inset CommandInset label
LatexCommand label
name "fig:Servicing-an-LLC-Request"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Results Overview
\shape italic
\color red
(to be expanded)
\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_tables/mst_2048_baseline_l2_96KB_to_2MB_summary.pdf
	scale 58
	BoundingBox 30bp 1035bp 810bp 1165bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(a) 
\size default
Impact of L2 Size
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_tables/mst_2048_baseline_l2_2way_to_32way_summary.pdf
	scale 58
	BoundingBox 30bp 1050bp 810bp 1165bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(b) 
\size default
Impact of L2 Associativity
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
mst Baseline Performance
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_tables/mst_2048_ht_20_10_l2_96KB_to_2MB_summary.pdf
	scale 58
	BoundingBox 30bp 935bp 810bp 1165bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(a) 
\size default
Impact of L2 Size
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_tables/mst_2048_ht_20_10_l2_2way_to_32way_summary.pdf
	scale 58
	BoundingBox 30bp 965bp 810bp 1165bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(b) 
\size default
Impact of L2 Associativity
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
mst Helper Threaded Prefetching Performance
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Impact of L2 Size
\shape italic
\color red
(to be expanded)
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_20_10_l2_96KB_to_2MB_totalCycles_normalized.pdf
	scale 58
	BoundingBox 0bp 0bp 347bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_20_10_l2_96KB_to_2MB_helperThreadL2CacheRequestBreakdowns.pdf
	scale 58
	BoundingBox 0bp 0bp 455bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(a) Normalized Total Cycles
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(b) Helper Thread L2 Request Breakdown
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Impact of L2 Size on mst Helper Threaded Prefetching Performance (lookahead=20,
 stride=10)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Impact of L2 Associativity
\shape italic
\color red
(to be expanded)
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_20_10_l2_2way_to_32way_totalCycles_normalized.pdf
	scale 58
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_20_10_l2_2way_to_32way_helperThreadL2CacheRequestBreakdowns.pdf
	scale 58
	BoundingBox 0bp 0bp 455bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(a) 
\size small
Normalized Total Cycles
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(b) Helper Thread L2 Request Breakdown
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Impact of L2 Associativity on mst Helper Threaded Prefetching Performance
 (lookahead=20, stride=10)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Impact of Prefetching Lookahead
\shape italic
\color red
(to be expanded)
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_10_10_lookahead_10_to_480_totalCycles_normalized.pdf
	scale 38
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_10_10_lookahead_10_to_480_helperThreadL2CacheRequestBreakdowns.pdf
	scale 38
	BoundingBox 0bp 0bp 455bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(1a) 
\size small
Normalized Total Cycles 
\size default
(stride=10)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(1b) Helper Thread L2 Request Breakdown 
\size default
(stride=10)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_10_20_lookahead_10_to_480_totalCycles_normalized.pdf
	scale 38
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_10_20_lookahead_10_to_480_helperThreadL2CacheRequestBreakdowns.pdf
	scale 38
	BoundingBox 0bp 0bp 455bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(2a) 
\size small
Normalized Total Cycles 
\size default
(stride=20)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(2b) Helper Thread L2 Request Breakdown 
\size default
(stride=20)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_10_40_lookahead_10_to_480_totalCycles_normalized.pdf
	scale 38
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_10_40_lookahead_10_to_480_helperThreadL2CacheRequestBreakdowns.pdf
	scale 38
	BoundingBox 0bp 0bp 455bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(3a) 
\size small
Normalized Total Cycles 
\size default
(stride=40)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(3b) Helper Thread L2 Request Breakdown 
\size default
(stride=40)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_10_80_lookahead_10_to_480_totalCycles_normalized.pdf
	scale 38
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_10_80_lookahead_10_to_480_helperThreadL2CacheRequestBreakdowns.pdf
	scale 38
	BoundingBox 0bp 0bp 455bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(4a) 
\size small
Normalized Total Cycles 
\size default
(stride=80)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(4b) Helper Thread L2 Request Breakdown 
\size default
(stride=80)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_10_160_lookahead_10_to_480_totalCycles_normalized.pdf
	scale 38
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_10_160_lookahead_10_to_480_helperThreadL2CacheRequestBreakdowns.pdf
	scale 38
	BoundingBox 0bp 0bp 455bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(5a) 
\size small
Normalized Total Cycles 
\size default
(stride=160)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(5b) Helper Thread L2 Request Breakdown 
\size default
(stride=160)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_10_320_lookahead_10_to_480_totalCycles_normalized.pdf
	scale 38
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_10_320_lookahead_10_to_480_helperThreadL2CacheRequestBreakdowns.pdf
	scale 38
	BoundingBox 0bp 0bp 455bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(6a) 
\size small
Normalized Total Cycles 
\size default
(stride=320)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(4b) Helper Thread L2 Request Breakdown 
\size default
(stride=320)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_10_480_lookahead_10_to_480_totalCycles_normalized.pdf
	scale 38
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_10_480_lookahead_10_to_480_helperThreadL2CacheRequestBreakdowns.pdf
	scale 38
	BoundingBox 0bp 0bp 455bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(7a) 
\size small
Normalized Total Cycles 
\size default
(stride=480)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(5b) Helper Thread L2 Request Breakdown 
\size default
(stride=480)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Impact of Prefetching Lookahead on mst Helper Threaded Prefetching Performance
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Impact of Prefetching Stride
\shape italic
\color red
(to be expanded)
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_10_10_stride_10_to_480_totalCycles_normalized.pdf
	scale 38
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_10_10_stride_10_to_480_helperThreadL2CacheRequestBreakdowns.pdf
	scale 38
	BoundingBox 0bp 0bp 455bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(1a) 
\size small
Normalized Total Cycles 
\size default
(lookahead=10)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(1b) Helper Thread L2 Request Breakdown 
\size default
(lookahead=10)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_20_10_stride_10_to_480_totalCycles_normalized.pdf
	scale 38
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_20_10_stride_10_to_480_helperThreadL2CacheRequestBreakdowns.pdf
	scale 38
	BoundingBox 0bp 0bp 455bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(2a) 
\size small
Normalized Total Cycles 
\size default
(lookahead=20)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(2b) Helper Thread L2 Request Breakdown 
\size default
(lookahead=20)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_40_10_stride_10_to_480_totalCycles_normalized.pdf
	scale 38
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_40_10_stride_10_to_480_helperThreadL2CacheRequestBreakdowns.pdf
	scale 38
	BoundingBox 0bp 0bp 455bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(3a) 
\size small
Normalized Total Cycles 
\size default
(lookahead=40)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(3b) Helper Thread L2 Request Breakdown 
\size default
(lookahead=40)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_80_10_stride_10_to_480_totalCycles_normalized.pdf
	scale 38
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_80_10_stride_10_to_480_helperThreadL2CacheRequestBreakdowns.pdf
	scale 38
	BoundingBox 0bp 0bp 455bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(4a) 
\size small
Normalized Total Cycles 
\size default
(lookahead=80)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(4b) Helper Thread L2 Request Breakdown 
\size default
(lookahead=80)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_160_10_stride_10_to_480_totalCycles_normalized.pdf
	scale 38
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_160_10_stride_10_to_480_helperThreadL2CacheRequestBreakdowns.pdf
	scale 38
	BoundingBox 0bp 0bp 455bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(5a) 
\size small
Normalized Total Cycles 
\size default
(lookahead=160)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(5b) Helper Thread L2 Request Breakdown 
\size default
(lookahead=160)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_320_10_stride_10_to_480_totalCycles_normalized.pdf
	scale 38
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_320_10_stride_10_to_480_helperThreadL2CacheRequestBreakdowns.pdf
	scale 38
	BoundingBox 0bp 0bp 455bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(6a) 
\size small
Normalized Total Cycles 
\size default
(lookahead=320)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(4b) Helper Thread L2 Request Breakdown 
\size default
(lookahead=320)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_480_10_stride_10_to_480_totalCycles_normalized.pdf
	scale 38
	clip

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename /home/itecgo/Archimulator/experiment_plots/mst_2048_ht_480_10_stride_10_to_480_helperThreadL2CacheRequestBreakdowns.pdf
	scale 38
	BoundingBox 0bp 0bp 455bp 211bp
	clip

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(7a) 
\size small
Normalized Total Cycles 
\size default
(lookahead=480)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
(5b) Helper Thread L2 Request Breakdown 
\size default
(lookahead=480)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Impact of Prefetching Stride on mst Helper Threaded Prefetching Performance
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Related Work 
\shape italic
\color red
(to be expanded)
\end_layout

\begin_layout Subsection
Prefetch Taxonomies
\end_layout

\begin_layout Standard
Even though helper threaded data prefetching mechanisms have been studied
 for a long time, LLC interferece and taxonomy of helper thread LLC requests
 have not been studied before.
 Here we briefly describe previous work in the context of hardware prefething.
 Our taxonomy of helper thread LLC requests is mostly similar to the work
 in 
\begin_inset CommandInset citation
LatexCommand cite
key "Mehta2004"

\end_inset

, which presents a taxonomy of hardware prefetches based on the idea of
 shared cache pollution in the hardware based data prefetching for shared
 L2 CMP.
 A hardware structure called the 
\shape italic
Evict Table
\shape default
 (ET) is attached to the LLC to gauge the amount of shared cache pollution
 caused by hardware prefetching.
 The HTRVC in our proposal is similar to the evict table, however it is
 used for tracking helper thread request victims instead of hardware prefetch
 victims .
 Good, bad and ugly requests are identified based on cache replacement activitie
s involved by hardware prefetches.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Jerger2006"

\end_inset

 developed a multiprocessor prefetch traffic and miss taxonomy that builds
 on existing uniprocessor taxonomy.
\end_layout

\begin_layout Subsection
Prefetch Aware Cache Content Management
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "WuJMSE2011"

\end_inset

 characterizes the performance of state-of-the-art LLC management policies
 in the presence and absence of hardware prefetching.
 Prefetch-Aware Cache Management (PACMan) is proposed to dynamically estimates
 and mitigates the degree of prefetch-induced cache interference by modifying
 the cache insertion and hit promotion policies to treat domand and prefetch
 requests differently.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Srinath2007"

\end_inset

 proposes a low-cost feedback directed mechanism for hardware prefetching.
 The mechanism can be applied to any hardware prefetchers such as sequential
 prefetchers, stream-based prefetchers, GHB based prefetchers and PC-based
 stride prefetchers.
\end_layout

\begin_layout Section
Conclusion 
\shape italic
\color red
(to be filled)
\end_layout

\begin_layout Section*
Acknowlegments
\end_layout

\begin_layout Standard
This work was supported by the National Natural Science Foundation of China
 under the contract No.
 61070029.
 
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "ref"
options "IEEEtran"

\end_inset


\end_layout

\end_body
\end_document
