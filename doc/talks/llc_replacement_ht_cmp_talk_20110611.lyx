#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass beamer
\begin_preamble
\usetheme{Warsaw}
% or ...

\setbeamercovered{transparent}
% or whatever (possibly just delete it)

\definecolor{uofsgreen}{rgb}{.125,.5,.25}
\usecolortheme[named=uofsgreen]{structure}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 2
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
This file is a solution template for:
\end_layout

\begin_layout Itemize
Talk at a conference/colloquium.
 
\end_layout

\begin_layout Itemize
Talk length is about 20min.
 
\end_layout

\begin_layout Itemize
Style is ornate.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Copyright 2004 by Till Tantau <tantau@users.sourceforge.net>.
 
\end_layout

\begin_layout Plain Layout
In principle, this file can be redistributed and/or modified under the terms
 of the GNU Public License, version 2.
 However, this file is supposed to be a template to be modified for your
 own needs.
 For this reason, if you use this file as a template and not specifically
 distribute it as part of a another package/program, the author grants the
 extra permission to freely copy and modify this file as you see fit and
 even to delete this copyright notice.
 
\end_layout

\end_inset


\end_layout

\begin_layout Title
Inter-Thread Reuse Distance Based LLC Replacement for Effective Helper Threaded
 Data Prefeteching on CMPs
\begin_inset Argument
status open

\begin_layout Plain Layout
ITRD Based LLC Replacement for Effective CMP HtPf
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
optional, use only with long paper titles
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Author
Min
\begin_inset space ~
\end_inset

Cai
\end_layout

\begin_layout Institute
School of Computer Science and Technology
\begin_inset Newline newline
\end_inset

Beijing Institute of Technology
\end_layout

\begin_layout Date
June 11, 2011
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Either use conference name or its abbreviation.
 
\end_layout

\begin_layout Itemize
Not really informative to the audience, more for people (including yourself)
 who are reading the slides online
\end_layout

\end_inset


\begin_inset Argument
status collapsed

\begin_layout Plain Layout
CFP 2003
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
optional, should be abbreviation of conference name
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
If you have a file called "institution-logo-filename.xxx", where xxx is a
 graphic format that can be processed by latex or pdflatex, resp., then you
 can add a logo by uncommenting the following:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
pgfdeclareimage[height=0.5cm]{institution-logo}{institution-logo-filename}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%
\backslash
logo{
\backslash
pgfuseimage{institution-logo}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
AtBeginSubsection[]{
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}   
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection] 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
If you wish to uncover everything in a step-wise fashion, uncomment the
 following command:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

%
\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout BeginFrame
Outline
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Structuring a talk is a difficult task and the following structure may not
 be suitable.
 Here are some rules that apply for this solution: 
\end_layout

\begin_layout Itemize
Exactly two or three sections (other than the summary).
 
\end_layout

\begin_layout Itemize
At *most* three subsections per section.
 
\end_layout

\begin_layout Itemize
Talk about 30s to 2min per frame.
 So there should be between about 15 and 30 frames, all told.
\end_layout

\begin_layout Itemize
A conference audience is likely to know very little of what you are going
 to talk about.
 So *simplify*! 
\end_layout

\begin_layout Itemize
In a 20min talk, getting the main ideas across is hard enough.
 Leave out details, even if it means being less precise than you think necessary.
 
\end_layout

\begin_layout Itemize
If you omit details that are vital to the proof/implementation, just say
 so once.
 Everybody will be happy with that.
 
\end_layout

\end_inset


\end_layout

\begin_layout Section
Motivation
\end_layout

\begin_layout BeginFrame
Thoughts on HT Induced Cache Pollution
\end_layout

\begin_layout Itemize
Helper threaded data prefetching on CMPs 
\end_layout

\begin_deeper
\begin_layout Itemize
is enabled by the presence of 
\color red
shared last level cache
\color inherit
 (LLC)
\end_layout

\begin_layout Itemize
uses helper thread (HT) to bring data later used by main thread (MT)
\end_layout

\begin_layout Itemize
utilizes
\color red
 accurate and timely MT-HT inter-thread LLC hits
\end_layout

\end_deeper
\begin_layout Itemize
HT induced 
\color red
cache pollution
\color inherit
 w.r.t MT performance
\end_layout

\begin_deeper
\begin_layout Itemize
only happens when HT evicts the data immediately used by MT
\end_layout

\begin_layout Itemize
will not happen when any piece of data that was previously brought by MT
 but will not be used by MT in future (i.e., with 
\color red
instant intra-MT reuse distance
\color inherit
), is evicted by HT, which is typically the case in mst!
\end_layout

\end_deeper
\begin_layout BeginFrame
Chracterizing Shared LLC Read Misses in mst
\end_layout

\begin_layout Itemize
Both MT and HT have 
\color red
a small set of delinquent loads (PCs)
\color inherit
 that incur most LLC read misses
\end_layout

\begin_layout Itemize
Exhibits a thrashing memory access pattern w.r.t.
 delinquent PCs (
\color red
thrashing delinquent PCs
\color inherit
)
\end_layout

\begin_deeper
\begin_layout Itemize
once a cache line is brought into LLC by a delinquent PC in MT, it will
 never be accessed again in the foreseeable future
\end_layout

\end_deeper
\begin_layout Itemize
Observation 0: in most of the cases, 
\color red
HT prefetches has a good coverage of MT read misses
\end_layout

\begin_deeper
\begin_layout Itemize
For most LLC read misses from HT, an immediate followup MT reference will
 access the data and hit in the LLC
\end_layout

\begin_layout Itemize
Then the MT accessed cache line will become DEAD and not accessed agained
 in the foreseeable future
\end_layout

\end_deeper
\begin_layout Itemize
Observation 1: 
\color red
Very few HT prefetches are late
\color inherit
 in that a followup MT reference causes an LLC miss but an LLC MSHR hit
\end_layout

\begin_layout BeginFrame
Reuse Distance
\end_layout

\begin_layout Itemize
Definition: The 
\color red
stack distance (SD)
\color inherit
 of an application's memory accesses is the number of 
\color red
UNIQUE memory references
\color inherit
 between two consecutive accesses to the same cache line
\end_layout

\begin_layout Itemize
Property: In a k-way set-associative cache a cache miss with stack distance
 sd is
\end_layout

\begin_deeper
\begin_layout Enumerate
sd < k 
\begin_inset Formula $\Rightarrow$
\end_inset

 
\color red
conflict
\color inherit
 miss
\end_layout

\begin_layout Enumerate
k<= sd < 
\begin_inset Formula $\infty$
\end_inset

 
\begin_inset Formula $\Rightarrow$
\end_inset

 
\color red
capacity
\color inherit
 miss
\end_layout

\begin_layout Enumerate
sd = 
\begin_inset Formula $\infty$
\end_inset

 
\begin_inset Formula $\Rightarrow$
\end_inset

 
\color red
cold
\color inherit
 miss
\end_layout

\end_deeper
\begin_layout Itemize
Definition: The 
\color red
reuse-distance (RD)
\color inherit
 of an application's memory accesses is the number of memory references
 between two consecutive accesses to the same cache line
\end_layout

\begin_layout Itemize

\color red
Cache allocation ticks (CAT)
\color inherit
 based reuse-distance of an application's memory accesses is the number
 of 
\color red
cache replacements
\color inherit
 between two consecutive accesses to the same cache line
\end_layout

\begin_deeper
\begin_layout Itemize
CAT time can 
\color red
relate time (events) to space (cache size)
\end_layout

\end_deeper
\begin_layout BeginFrame
Limitations of Intra-Thread Reuse Distance Prediction Based Cache Replacement
\end_layout

\begin_layout Itemize
Recently proposed reuse(rereference/next-use) distance prediction based
 LLC replacement policies for CMPs have achieved good results for 
\color red
sequential workloads without helper threaded data prefetching
\color inherit
 enabled
\end_layout

\begin_deeper
\begin_layout Itemize
Which are good 
\color red
online approximations of Belady's offline optimal cache replacement policy
\color inherit
 (i.e., evict the cache line that will be accessed in the furtherest future)
\end_layout

\end_deeper
\begin_layout Itemize
However,
\color red
 the distant intra-thread reuse distance of loads issued from thrashing
 delinquent PCs
\end_layout

\begin_deeper
\begin_layout Itemize

\color red
Renders reuse distance prediction based LLC replacement useless for programs
 such as mst
\end_layout

\end_deeper
\begin_layout BeginFrame
Related Work
\end_layout

\begin_layout Itemize
CII miss classification (M.
 Dubois, etc.
 “The detection and elimination of useless misses in multiprocessors” In
 ISCA'1993)
\end_layout

\begin_deeper
\begin_layout Itemize
Cold Misses
\end_layout

\begin_layout Itemize
Intra-Processor Misses and Inter-Processor Misses
\end_layout

\end_deeper
\begin_layout Itemize
Novel cache Replacement Policies proposed in recent years
\end_layout

\begin_deeper
\begin_layout Itemize
MLP awareness (ISCA 06)
\end_layout

\begin_layout Itemize
Utility/marginal gain awareness (Utility based partitioning)
\end_layout

\begin_layout Itemize
Thread awareness (TADIP)
\end_layout

\begin_layout Itemize
Probability (a few..)
\end_layout

\begin_layout Itemize
Reuse distance / rereference distance / next-use distance prediction (ICCD
 2007, HiPC 2008, ISCA 2010, ICS 2010 from Zhejiang Univ.)
\end_layout

\end_deeper
\begin_layout Itemize
Techniques for Reducing Inter-Core Misses
\end_layout

\begin_deeper
\begin_layout Itemize
Set Pinning (Shekhar Srikantaiah, etc.
 
\begin_inset Quotes eld
\end_inset

Adaptive Set Pinning: Managing Shared Caches in Chip Multiprocessors
\begin_inset Quotes erd
\end_inset

 in ASPLOS'2008)
\end_layout

\begin_layout Itemize
Block Pinning (Rakesh Kumar, etc.
 
\begin_inset Quotes eld
\end_inset

Adaptive Block Pinning for Multi-core Architectures 
\begin_inset Quotes erd
\end_inset

 in HiPC'2008)
\end_layout

\end_deeper
\begin_layout Section
Methodology
\end_layout

\begin_layout BeginFrame
Inter-Thread Reuse Distance
\end_layout

\begin_layout Itemize
Fortunately, for the helper threaded data prefetching scheme that we adopted
 for accelerating mst, a new metric called 
\color red
inter-thread reuse distance
\color inherit
 can be used to monitor the quality of HT and help synchronize HT with MT
\end_layout

\begin_deeper
\begin_layout Enumerate

\color red
Low HT-MT inter-thread reuse distance
\color inherit
 is an indicator of 
\color red
good performance
\color inherit
 of the HT scheme
\end_layout

\begin_layout Enumerate

\color red
Medium HT-MT inter-thread reuse distance
\color inherit
 signals those 
\color red
potentially late
\color inherit
 HT prefetches that, depend on the LLC replacement policy, may be useful
 or not for MT
\end_layout

\begin_layout Enumerate

\color red
High HT-MT inter-thread reuse distance
\color inherit
 implies HT and MT is 
\color red
not synchronized
\color inherit
 caused by either little synchronization or the work in HT and MT is not
 balanced
\end_layout

\end_deeper
\begin_layout BeginFrame
Inter-Thread Reuse Distance Based HT Quality Assessment
\end_layout

\begin_layout Standard
Under the LRU LLC replacement policy, for LLC misses that issued from delinquent
 PCs in either in MT or HT, the value of HT-MT inter-thread reuse distance
 is (w.rt.
 the associativity of the cache) 
\end_layout

\begin_layout Itemize
HT-MT ITRD >= 0
\end_layout

\begin_deeper
\begin_layout Itemize
ITSD > assoc 
\begin_inset Formula $\Rightarrow$
\end_inset

 replaced HT prefetches (need aggressiveness tuning)
\end_layout

\begin_layout Itemize
ITSD <= assoc
\end_layout

\begin_deeper
\begin_layout Itemize
Cache hit 
\begin_inset Formula $\Rightarrow$
\end_inset

 useful HT prefetches
\end_layout

\begin_layout Itemize
MSHR hit 
\begin_inset Formula $\Rightarrow$
\end_inset

 late
\begin_inset Formula $_{1}$
\end_inset

 HT prefetches (need aggressiveness tuning)
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
HT-MT ITRD <0
\end_layout

\begin_deeper
\begin_layout Itemize
Low 
\begin_inset Formula $\Rightarrow$
\end_inset

 late
\begin_inset Formula $_{1}$
\end_inset

 HT prefetches (need aggressiveness tuning)
\end_layout

\begin_layout Itemize
Medium to High 
\begin_inset Formula $\Rightarrow$
\end_inset

 late
\begin_inset Formula $_{2}$
\end_inset

 HT prefetches (need synchronization)
\end_layout

\begin_layout Itemize
Distant 
\begin_inset Formula $\Rightarrow$
\end_inset

 MT loads not covered by HT prefetches
\end_layout

\end_deeper
\begin_layout BeginFrame

\color red
Inter-Thread Reuse Distance (ITRD)
\color inherit
 Prediction
\end_layout

\begin_layout Itemize
For 
\color red
each program phase separated by two consecutive synchronizations
\color inherit
, in the end of the program phase
\end_layout

\begin_deeper
\begin_layout Itemize

\color red
ITRD
\color inherit
 = 1/2 * 
\color red
previous_ITRD
\color inherit
 + 1/2 * 
\color red
ITRD_in_the_current_phase
\end_layout

\end_deeper
\begin_layout Itemize
A 
\color red
confidence counter
\color inherit
 with a threshold value of 10 and maximum value of 20
\end_layout

\begin_layout Itemize
Main components, similar to the one used in the reuse distance prediction
 based cache replacement paper
\end_layout

\begin_deeper
\begin_layout Itemize
Data address indexed FIFO backed 
\color red
sampler
\end_layout

\begin_layout Itemize
PC indexed LRU cache backed 
\color red
predictor
\color inherit
 (has the same geometry as L2)
\end_layout

\end_deeper
\begin_layout BeginFrame
Sidebar: Concept of Priority Stack in Cache Replacement
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename /home/itecgo/Archimulator/doc/landscape_cache_replacement_LRU_LFU.pdf
	scale 33

\end_inset


\end_layout

\begin_layout BeginFrame
Inter-Thread Reuse Distance Based LLC Replacement for the HT scheme
\end_layout

\begin_layout Itemize
Extra hardware: an 
\color red
additional HT bit per L2 line
\end_layout

\begin_deeper
\begin_layout Itemize
Each cache line has an additional HT bit indicating the line is brought
 by HT and has not been used by MT yet
\end_layout

\begin_layout Itemize

\color red
When a cache line marked by HT is referenced by MT, it is unmarked
\end_layout

\end_deeper
\begin_layout Itemize
Insertion position of an L2 read miss issued from delinquent PCs and marked
 as HT, if its predicted HT-MT reuse distance is
\end_layout

\begin_deeper
\begin_layout Enumerate

\color red
high
\color inherit
 
\begin_inset Formula $\Rightarrow$
\end_inset

 just 
\color red
bypass
\color inherit
 the L2 or LRU position
\end_layout

\begin_layout Enumerate

\color red
medium
\color inherit
 
\begin_inset Formula $\Rightarrow$
\end_inset

 
\color red
middle
\color inherit
 position or 1/4 LRU position
\end_layout

\begin_layout Enumerate

\color red
low
\color inherit
 
\begin_inset Formula $\Rightarrow$
\end_inset

 
\color red
MRU
\color inherit
 position
\end_layout

\begin_layout Enumerate
cannot be determined 
\begin_inset Formula $\Rightarrow$
\end_inset

 LRU position
\end_layout

\end_deeper
\begin_layout Itemize
Insertion position of an L2 read miss issued 
\color red
from delinquent PCs and not marked as HT
\color inherit
: 
\color red
LRU
\color inherit
 position
\end_layout

\begin_layout Itemize
Insertion position of an L2 read miss in remaining cases: MRU position
\end_layout

\begin_layout BeginFrame
Inter-Thread Reuse Distance Based feedback directed synchronization triggering
 and aggressiveness adjustment for the HT scheme
\end_layout

\begin_layout Itemize
Hardware triggered synchronization of HT with MT
\end_layout

\begin_deeper
\begin_layout Itemize
Based on the already implemented pseudo call mechanism that pass parameters
 between the program and the processor in some unused registers by the ADDU
 MIPS instruction with predefined special parameters
\end_layout

\begin_layout Itemize
A register based polling process is used to let the HT periodically ask
 the processor if it need to synchronize with MT
\end_layout

\begin_layout Itemize
Tackling the 
\color red
B
\color inherit
 parameter in K-P-B model
\end_layout

\begin_layout Itemize
Can potentially utilize the 
\color red
synchronization register
\color inherit
 mecahnisms proposed in existing papers to reduce 
\color red
synchronization overhead
\end_layout

\end_deeper
\begin_layout Itemize
Dynamic HT aggressivenss adjustment
\end_layout

\begin_deeper
\begin_layout Itemize
Parameters for adjusting the aggressiveness of the HT are
\end_layout

\begin_deeper
\begin_layout Itemize
Lookahead (a.k.a.
 the 
\color red
K
\color inherit
 parameter in K-P-B model)
\end_layout

\begin_layout Itemize
Prefetching work within one program phase (a.k.a.
 the 
\color red
P
\color inherit
 parameter in K-P-B model)
\end_layout

\end_deeper
\end_deeper
\begin_layout Section
Experimentation
\end_layout

\begin_layout BeginFrame
Results Obtained So Far: A Simple Thrashing/HT-Sensitive Augmented LRU LLC
 Replacement Policy
\end_layout

\begin_layout Itemize
2 X 2 CMP; two level cache hierarchy with MESI coherence between private
 L1s; 4MB 8-way associative shared L2; fixed DRAM latency = 200 cycles;
 mst 1000, run to end detailed simulation
\end_layout

\begin_layout Itemize

\color red
Thrashing/HT-sensitive augmented LRU LLC replacement
\color inherit
 algorithm: 
\color blue
<see demo>
\end_layout

\begin_layout Itemize
Speedup of (HT + enhanced LRU) vs.
 (HT + LRU): 
\color red
1.011
\end_layout

\begin_layout Standard
\align center

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
version
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
LLC repl
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
c0t0.llcReadMisses
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
c1t0.llcReadMisses
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
cycles
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
baseline
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
LRU
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
1032780
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
N/A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
605676479
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
HT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
LRU
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
460884
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
569665
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
501525524
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
HT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
enhanced LRU
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
437226
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
548200
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
496180137
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout BeginFrame
Conclusion
\end_layout

\begin_layout Itemize

\color red
Intra-Thread Reuse Distance 
\color inherit
and its prediction based LLC replacement is not helperful for improving
 the HT performance of workloads that contain thrashing delinquent PCs
\end_layout

\begin_layout Itemize

\color red
Inter-Thread Reuse Distance
\color inherit
 is a good metric for evaluating the effectiveness of the HT scheme
\end_layout

\begin_layout Itemize

\color red
Inter-Thread Reuse Distance based feedback-directed dynamic HT synchronization
 triggering and parameter tuning
\color inherit
 is a viable solution for improving the effectiveness of the HT scheme
\end_layout

\begin_layout Itemize
Further work
\end_layout

\begin_deeper
\begin_layout Itemize
inter-thread reuse distance 
\color red
measurement and prediction
\end_layout

\begin_layout Itemize
inter-thread reuse distance based 
\color red
feedback directed HT scheme
\end_layout

\end_deeper
\begin_layout EndFrame

\end_layout

\end_body
\end_document
