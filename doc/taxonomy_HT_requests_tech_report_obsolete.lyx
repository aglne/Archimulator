#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass paper
\use_default_options true
\begin_modules
theorems-std
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement h
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Hardware Support for Efficient Helper Threaded Data Prefetching on Chip Multiprocessors"
\pdf_author "Min Cai, Zhimin Gu"
\pdf_keywords "chip multiprocessors, helper threaded prefetching, cache replacement, memory level parallelism"
\pdf_bookmarks false
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Hardware Support for Efficient Helper Threaded Data Prefetching on Chip
 Multiprocessors
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Project (No.
 61070029) Supported by the National Natural Science Foundation of China.
\end_layout

\end_inset


\end_layout

\begin_layout Author
Min Cai, Zhimin Gu
\end_layout

\begin_layout Institution
Beijing Institute of Technology
\end_layout

\begin_layout Abstract
Helper threaded data prefetching on chip multiprocessors (CMPs), in its
 most basic form, utilizes the processing power of underutilized neighboring
 cores that communicate via a shared last level cache (LLC) to improve the
 performance of a single-threaded program running in a CMP.
 However, the multiple concurrent memory reference/miss streams that come
 from both the main thread (MT) and the helper thread (HT) can inevitably
 stress and pollute LLC if no effective LLC content management techniques
 are employed.
\end_layout

\begin_layout Abstract
In this paper, we leverage both passive and active forms of LLC content
 management techniques to improve the effectiveness of helper threaded data
 prefetching on CMPs.
 Firstly, the contribution of HT requests to the MT performance is quantified
 and classified accordingly.
 Secondly, based on inter-thread reuse distance prediction, contribution
 aware LLC replacement with bypassing is proposed to make near-optimal replaceme
nt decisions for HT requests based on their contribution to the MT performance.
 Thirdly, by exploiting the inherent memory level parallelism (MLP) available
 on CMPs, the scheme of hardware constructed dynamic p-thread chaining is
 discussed to tackle with late HT requests as for MT references.
 Finally, the proposed mechanisms are implemented in an execution-driven
 cycle-accurate multicore architectural simulator and their comparative
 performance to their existing counterparts are provided using memory-intensive
 benchmarks from Olden and CPU2006.
 Results shows that: (1) contribution aware LLC replacement with bypassing
 can improve the MT performance by XX% as compared to the baseline helper
 threaded data prefetching on CMPs, and additional L2 bypassing for select
 harmful HT requests can further improve the MT performance by XX%; (2)
 MLP-aware hardware constructed dynamic p-thread chaining can transform
 xx% of late HT requests to useful ones and therefore improve the MT performance
 by XX%.
\end_layout

\begin_layout Keywords
chip multiprocessors, helper threaded data prefetching, cache replacement,
 memory level parallelism
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
TODO: background? motivation? our work: what? how? result?
\end_layout

\begin_layout Standard
TODO: Brief description about Helper Threaded Data Prefetching on Shared
 Cache Based CMPs.
 
\end_layout

\begin_layout Standard
MT = Main Thread (c0t0 here), HT = Helper Thread (c1t0 here).
 We assume here a two level cache hierarchy where L1 caches are private
 and the L2 cache is shared among all processor cores on a single chip.
\end_layout

\begin_layout Standard
TODO: Description about paper structure.
\end_layout

\begin_layout Section
Related Work
\end_layout

\begin_layout Paragraph
TODO: previous work on prefetch taxonomies.
 
\end_layout

\begin_layout Standard
Traditional coverage and accuracy metrics for h/w prefetches.
\end_layout

\begin_layout Standard
-> good, bad and ugly breakdown of h/w prefetches.
\end_layout

\begin_layout Standard
-> more fine-grained breakdowns of h/w prefetches.
\end_layout

\begin_layout Standard
any previous work on cache request breakdowns for helper threaded data prefetchi
ng?
\end_layout

\begin_layout Paragraph
TODO: a brief survey of recently proposed cache replacement policies.
 
\end_layout

\begin_layout Standard
(1) victim selection; (2) insertion position or bypassing; (3) promotion
 on reference.
 
\end_layout

\begin_layout Paragraph
TODO: previous work on MLP based hardware mechanisms to improve the effectivenes
s of data prefetching.
\end_layout

\begin_layout Standard
dynamic speculative precomputation (with chaining).
\end_layout

\begin_layout Section
Quantifying the Contribution of HT Requests to MT Performance
\end_layout

\begin_layout Definition
Based on their contribution to the HT performance, for the HT requests to
 L2 cache shared by MT, HT and some other threads, the following taxonomy
 can be obtained:
\end_layout

\begin_layout Standard
# Good HT requests = # HT requests that hit by MT before evicted;
\end_layout

\begin_layout Standard
# Bad HT requests = # HT requests whose requested data are used later (or
 not used at all) by MT than the evicted data;
\end_layout

\begin_layout Standard
# Ugly HT requests = # HT requests - # good HT requests - # bad HT requests.
\end_layout

\begin_layout Subsection
Tracking HT Request Victims: HT Request Evict Table
\end_layout

\begin_layout Standard
An HT Request Evict Table (ET) is attached to the L2 cache to track L2 lines
 that are evicted by HT requests and MT references to L2 lines brought or
 evicted by HT requests.
 ET has the same geometry as the L2 cache and uses the LRU replacement policy
 to track victim lines for each HT request per set.
 Specifically,
\end_layout

\begin_layout Enumerate
When a new HT request arrives at L2, an ET entry is allocated for tracking
 the victim line; and
\end_layout

\begin_layout Enumerate
when an HT requested line is evicted in L2, the corresponding ET entry for
 tracking the victim line is deallocated.
\end_layout

\begin_layout Subsection
Identifying Good, Bad and Ugly HT Requests
\end_layout

\begin_layout Standard
There are two events to be considered for tracking HT requests' replacement
 victims and hits by MT: (1) when the L2 cache is filling a line; and (2)
 when the L2 cache is servicing a request.
\end_layout

\begin_layout Subsubsection
Actions Taken on Filling an L2 Line
\end_layout

\begin_layout Standard
When the L2 cache is filling a line, 
\end_layout

\begin_layout Enumerate
we should set HTRequest bit for the requested line if the requester is HT,
 and clear HTRequest bit for the victim line if the victim broughter is
 HT;
\end_layout

\begin_layout Enumerate
we should insert an entry in ET to track the victim line if the requester
 is HT and the victim line has invalid state or its broughter is non-HT;
\end_layout

\begin_layout Enumerate
we should remove the victim's corresponding ET line if the victim broughter
 is HT and the requester is non-HT;
\end_layout

\begin_layout Enumerate
for case 5:?.
\end_layout

\begin_layout Standard
The detailed actions are listed in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Filling-A-Cache-Line"

\end_inset

.
\end_layout

\begin_layout Standard
\align center

\size tiny
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="6">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Requester
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Victim
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Other Condition
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Extra Cache Action
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
ET Action
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
HT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
INVALID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
None
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
set HTRequest for victim
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
insert NULL entry
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
HT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Non-HT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
None
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
set HTRequest for victim
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
insert DATA entry for victim
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
HT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
HT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
None
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
update broughter HTAccess for victim
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "22col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Update evicter HTAccess for victim HT request's Entry
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Non-HT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
HT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
None
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
clear HTRequest for victim
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
remove victim's ET entry
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
5
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Non-HT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Non-HT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Formula $\exists$
\end_inset

htRequest in cache[set]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
None
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
update victim for htRequest's Entry
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Actions Taken When Filling an L2 Line
\begin_inset CommandInset label
LatexCommand label
name "tab:Filling-A-Cache-Line"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Actions Taken on Servicing an L2 Request
\end_layout

\begin_layout Standard
When the L2 cache is servicing a request issued by MT,
\end_layout

\begin_layout Enumerate
under HT hit: we should clear the HTRequest bit for the requested line,
 and remove LRU in ET;
\end_layout

\begin_layout Enumerate
under ET hit: we should set LRU for the requested line in ET.
\end_layout

\begin_layout Standard
The detailed actions are listed in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Servicing-a-Cache-Request"

\end_inset

.
\end_layout

\begin_layout Standard
\align center

\size tiny
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center

\size scriptsize
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="7">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
MT Hit
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\color blue
HT Hit
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\color red
ET Hit
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Cache Action
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
ET Action
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Comments
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Issue Miss
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
None
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No changes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\color red
Yes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\color red
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "18col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Issue Miss, 
\color red
clear HTRequest for ET entry
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\color red
set LRU and remove entry
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Bad HT request
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\color blue
Yes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\color blue
Hit, clear HTRequest
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\color blue
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "18col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
\color blue
remove HT request's entry
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Good HT request
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\color blue
Yes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\color red
Yes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\color red
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "18col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
\color blue
Hit, clear HTRequest
\color inherit
, 
\color red
clear HTRequest for ET entry
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\color blue
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "18col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
\color blue
remove HT request's entry
\color inherit
, 
\color red
set LRU and remove entry
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "22col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\size scriptsize
MT requested data evicted and requested back in by HT
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Hit
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
None
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No changes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\color red
Yes
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\color red
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "18col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Hit, 
\color red
clear HTRequest for ET entry
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\color red
set LRU and remove entry
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "22col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\size scriptsize
MT requested data evicted, requested back in by HT and hit to by MT
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
N/A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
N/A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "22col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Impossible: cannot have identical tags in cache
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
N/A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
N/A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "22col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\size scriptsize
Impossible: cannot have identical tags in cache
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\size tiny
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Actions Taken When Servicing an L2 Request
\begin_inset CommandInset label
LatexCommand label
name "tab:Servicing-a-Cache-Request"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
MT Contribution Aware Reuse Distance Prediction Based Shared LLC Replacement
 with Bypassing
\end_layout

\begin_layout Standard
Use inter-MT/HT reuse distance prediction and HT prefetch quality information
 obtained above to make cache replacement decisions in order to keep useful
 prefetches on the shared L2, and for non-inclusive cache hierarchy, bypass
 useless and harmful prefetches directly to the L1 data cache private to
 the HT core.
\end_layout

\begin_layout Section
MLP Based Chained Speculative Pre-Computation Mini-Threads for Tackling
 Late MT Prefetches
\end_layout

\begin_layout Standard
By utilizing the inherent memory level parallelism existing in chip multiprocess
ors, chained speculative pre-computation mini-threads can be constructed
 and spawned to prefetch in late yet potentially useful HT prefetches, thus
 improving the effectiveness of the HT prefetching scheme.
\end_layout

\begin_layout Section
Experimentation
\end_layout

\begin_layout Standard
We use the yet-to-publish FleximJ simulator to evaluate different cache
 replacement strategies and dynamic pre-computation thread scheme proposed
 in previous sections.
 FleximJ is an execution-driven architectural simulator implemented in Java
 and running on Linux that supports application-only cycle-accurate modeling
 of multicore multithreaded architectures.
 It has preliminary support of simulating Pthreads based parallel workloads.
\end_layout

\begin_layout Subsection
Simulation Setup
\end_layout

\begin_layout Standard
xx
\end_layout

\begin_layout Subsection
Results
\end_layout

\begin_layout Standard
xx
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
TODO: our work: what? how? result? Further work?
\end_layout

\begin_layout Section*
Acknowledgment
\end_layout

\begin_layout Standard
This work was supported by the National Natural Science Foundation of China
 under the contract No.
 61070029.
 
\end_layout

\end_body
\end_document
