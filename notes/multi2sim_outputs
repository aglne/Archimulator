itecgo@itecgo-desktop:~/Desktop/multi2sim-3.1/src$ ./m2s --cpu-sim detailed /home/itecgo/FleximJ/benchmarks/Olden_Custom1/mst/baseline/mst 1000

; Multi2Sim 3.1 - A Simulation Framework for CPU-GPU Heterogeneous Computing
; Please use command 'm2s --help' for a list of command-line options.
; Last compilation: Sep 22 2011 16:57:48

Making graph of size 1000
Make phase 2
Make phase 3
Make phase 4
Make returning
Compute phase 1
Compute phase 2
MST has cost 3793

;
; Simulation Statistics Summary
;

[ CPU ]
Time = 1780.22
Instructions = 301579601
InstructionsPerSecond = 169406
Contexts = 1
Memory = 22147072
MemoryMax = 22147072
Cycles = 1109408696
InstructionsPerCycle = 0.2718
BranchPredictionAccuracy = 0.9572
CyclesPerSecond = 623185


----------

itecgo@itecgo-desktop:~/Desktop/multi2sim-3.1/src$ ./m2s --cpu-sim detailed /home/itecgo/FleximJ/benchmarks/Olden_Custom1/mst/baseline/mst 10000

; Multi2Sim 3.1 - A Simulation Framework for CPU-GPU Heterogeneous Computing
; Please use command 'm2s --help' for a list of command-line options.
; Last compilation: Sep 22 2011 16:57:48

Making graph of size 10000
Make phase 2
Make phase 3
^C
sim.last_dump  0  # Cycle of last dump
sim.ipc_last_dump  0.8314  # IPC since last dump

Core 0:
eventq:
  0. move data/ecx
  1. effaddr ebp/addr
rob:
  rob for thread 0 (entries 0 to 63), count=64, size=64
      sub ebx,data/zps,cf,of
      branch zps,of/-
      effaddr ebp/addr
      load addr/data
      sub ebx,data/zps,cf,of
      branch zps/-
      effaddr ebp/addr
      load addr/data
      move data/eax
      move ebx/edi
      sub eax,ebx/zps,cf,of
      branch zps,of/-
      move eax/edi
      move ebx/eax
      effaddr ebp/addr
      load addr/data
      mult edi,data/edi,cf,of
      add edi,eax/edi,zps,cf,of
      move -/eax
      mult edi,eax/eax,edx,cf,of
      move edi/eax
      shift eax/eax,zps,cf,of
      move eax/data
      effaddr ebp/addr
      store addr,data/-
      move edx/ecx
      effaddr ebp/addr
      load addr/data
      move data/edx
   HT effaddr edx,edi/addr
      load addr/data
      move data/ecx
      move ecx/data
      effaddr eax/addr
      store addr,data/-
      move eax/data
      effaddr edx,edi/addr
      store addr,data/-
      effaddr ebp/addr
      load addr/data
      move data/edx
      move edx/data
      effaddr eax/addr
      store addr,data/-
      add esp/esp,zps,cf,of
      effaddr esp/aux
      load aux/ebx
      add esp/esp
      effaddr esp/aux
      load aux/esi
      add esp/esp
      effaddr esp/aux
      load aux/edi
      add esp/esp
      effaddr esp/aux
      load aux/ebp
      add esp/esp
      effaddr esp/aux
      load aux/aux
      add esp/esp
      ret aux/-
      add ebx/ebx,zps,cf,of
      effaddr ebp/addr
      load addr/data
Thread 0:
fetch queue:
  0. move -/eax
  1. move edx/data
  2. effaddr esp/addr
  3. store addr,data/-
  4. mult esi,eax/eax,edx,cf,of
  5. move esi/eax
  6. shift eax/eax,zps,cf,of
  7. shift edx/edx,zps,cf,of
  8. sub edx,eax/edx,zps,cf,of
  9. mult edx/edx,cf,of
 10. sub esi,edx/esi,zps,cf,of
 11. mult esi/esi,cf,of
 12. effaddr edi,esi/eax
 13. move eax/edx
 14. shift edx/edx,zps,cf,of
 15. shift edx/edx,zps,cf,of
 16. add eax,edx/eax,zps,cf,of
 17. and eax/eax,zps,cf,of
 18. sub eax,edx/eax,zps,cf,of
 19. add eax/eax,zps,cf,of
 20. move eax/data
 21. effaddr esp/addr
 22. store addr,data/-
 23. call -/-
uop queue:
  0. shift ecx/ecx,zps,cf,of
  1. move ecx/esi
  2. sub esi,eax/esi,zps,cf,of
  3. effaddr edx/addr
  4. load addr/data
  5. move data/eax
  6. move ebx/edx
  7. shift edx/edx,zps,cf,of
  8. mult esi/esi,cf,of
  9. effaddr ebp/addr
 10. load addr/data
 11. sub ecx,data/ecx,zps,cf,of
 12. move eax/data
 13. effaddr esp/addr
 14. store addr,data/-
 15. move ebx/eax
 16. effaddr ebp/addr
 17. load addr/data
 18. div data,eax/eax,edx
 19. sub edi,esi/edi,zps,cf,of
 20. move edi/esi
 21. mult ecx/ecx,cf,of
 22. mult esi/esi,cf,of
 23. mult edi/edi,cf,of
 24. effaddr ecx,esi/esi
 25. effaddr edx,edx/edx
 26. shift edx/edx,zps,cf,of
 27. effaddr ebp,eax/addr
 28. load addr/data
 29. add edx,data/edx,zps,cf,of
iq:
  0. move ecx/data
  1. move data/eax
  2. sub eax,ebx/zps,cf,of
  3. branch zps,of/-
  4. move eax/edi
  5. mult edi,data/edi,cf,of
  6. add edi,eax/edi,zps,cf,of
  7. mult edi,eax/eax,edx,cf,of
  8. move edi/eax
  9. shift eax/eax,zps,cf,of
 10. move eax/data
 11. move edx/ecx
 12. effaddr ebp/addr
lq:
  0. load addr/data
sq:
  0. store addr,data/-
  1. store addr,data/-
  2. store addr,data/-
  3. store addr,data/-
  4. store addr,data/-
  5. store addr,data/-
Integer register file at core 0, thread 0
Format is [busy, pending], * = free
    0 [1-0]    1 [1-0]    2 [4-1]    3 [1-0]    4 [4-0]
    5 [1-0]    6 [1-0]    7 [1-0]    8 [3-0]    9 [1-1]
   10 [1-0]   11 [1-1]   12 [1-0]   13 [1-0]   14 [1-0]
   15 [1-0]   16 [1-0]   17 [1-0]   18 [3-1]   19 [1-0]
   20 [1-0]   21 [1-0]   22 [1-1]   23 [3-1]   24 [1-0]
   25 [1-0]   26 [1-1]   27 [1-0]   28*[0-0]   29 [1-1]
   30 [1-0]   31 [3-0]   32 [1-1]   33 [1-1]   34 [1-1]
   35*[0-0]   36 [1-0]   37 [1-0]   38 [1-0]   39 [3-0]
   40 [1-0]   41 [1-0]   42 [1-0]   43 [1-1]   44 [1-0]
   45 [1-0]   46 [1-0]   47 [1-1]   48 [1-0]   49 [1-0]
   50 [1-0]   51 [1-0]   52 [1-0]   53 [1-0]   54 [3-1]
   55 [1-0]   56 [1-1]   57 [1-0]   58 [4-1]   59 [1-0]
   60 [1-0]   61 [1-0]   62 [1-0]   63 [1-0]   64 [4-0]
   65 [1-0]   66 [1-0]   67 [1-0]   68 [1-0]   69 [1-0]
   70 [1-0]   71 [1-0]   72 [1-1]   73 [1-1]   74 [1-0]
   75 [1-0]   76 [1-0]   77 [1-0]   78*[0-0]   79 [1-1]
Iteger Register Aliasing Table:
   1->58    2->43    3->22    4->64    5->61    6->77    7->74    8->2  
   9->71   10->70   11->69   12->68   13->67   14->10   15->58   16->58 
  17->58   18->45   19->36   20->46   21->73   22->29 
int_free_phreg_count  3  # Number of free integer registers

Floating-point register file at core 0, thread 0
Format is [busy, pending], * = free
    0*[0-0]    1*[0-0]    2*[0-0]    3*[0-0]    4*[0-0]
    5*[0-0]    6*[0-0]    7*[0-0]    8*[0-0]    9*[0-0]
   10*[0-0]   11*[0-0]   12*[0-0]   13*[0-0]   14*[0-0]
   15*[0-0]   16*[0-0]   17*[0-0]   18*[0-0]   19*[0-0]
   20*[0-0]   21*[0-0]   22*[0-0]   23*[0-0]   24*[0-0]
   25*[0-0]   26*[0-0]   27*[0-0]   28 [1-0]   29 [1-0]
   30 [1-0]   31 [1-0]   32 [1-0]   33 [1-0]   34 [1-0]
   35 [1-0]   36 [1-0]   37 [1-0]   38*[0-0]   39 [1-0]
Iteger Register Aliasing Table:
  23->39   24->28   25->37   26->36   27->35   28->34   29->33   30->32 
  31->31   32->30   33->29 
fp_free_phreg_count  29  # Number of free floating-point registers

mapped context: 1000
  pid=1000
  status={running|alloc}
  parent=(null)
  heap break: 0x1bf63000
  blocked signal mask: 0x0 {}
  pending signals: 0x0 {}

SIGINT received

;
; Simulation Statistics Summary
;

[ CPU ]
Time = 17497.10
Instructions = 4660380189
InstructionsPerSecond = 266352
Contexts = 1
Memory = 342999040
MemoryMax = 342999040
Cycles = 5605522920
InstructionsPerCycle = 0.8314
BranchPredictionAccuracy = 0.9704
CyclesPerSecond = 320369

itecgo@itecgo-desktop:~/Desktop/multi2sim-3.1/src$ 
